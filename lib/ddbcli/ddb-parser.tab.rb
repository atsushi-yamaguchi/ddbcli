#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 549)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CREATE
  CONTAINS
  COUNT
  DELETE
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEXT
  NOT
  NUMBER
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.scan /NULL/i)
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_:/]*|i)
      yield [:IDENTIFIER, tok]
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,     4,   256,   160,   160,    18,   191,   160,   160,   160,
    21,    78,    79,    19,    20,   162,   162,    52,    52,   162,
   162,   162,   110,   255,   160,   159,   159,   160,   190,   159,
   159,   159,    22,    23,    24,    25,   162,   294,   160,   162,
    26,   160,    25,   173,    50,    50,   159,   113,   174,   159,
   162,   201,   160,   162,   156,    52,   160,   231,    27,   232,
   159,    28,    29,   159,   162,    30,   161,   161,   162,   192,
   161,   161,   161,   197,   159,   128,   171,   128,   159,    54,
   201,    73,    50,    90,   172,    52,    91,   161,    90,   250,
   161,    91,   223,   198,   199,   200,   202,    55,   107,    49,
   134,   161,   197,    48,   161,   252,   253,    57,   241,   240,
    94,    47,    50,    93,    56,   161,    32,    33,    34,   161,
    35,   205,   198,   199,   200,   202,   204,   206,   209,   210,
   211,    36,    37,    90,    38,    39,    91,   312,    78,    79,
   313,   142,   143,   144,   142,   143,   144,   229,   114,   230,
   142,   143,   144,   306,   307,   308,   321,   115,   322,   142,
   143,   144,   142,   143,   144,   297,   283,   284,   284,   233,
   117,   234,   306,   307,   308,   252,   253,   252,   253,   118,
   119,   121,   122,   123,   124,   107,   107,   105,   129,   105,
   133,   134,    69,   138,   139,   140,   102,   101,   147,   148,
   149,   134,   151,   152,   105,   100,    99,   164,   165,   168,
    63,   170,    95,    98,    97,    96,   176,   178,   181,   182,
   183,    63,   185,   186,    95,    63,   133,    88,   196,    85,
   212,   213,   214,   215,   216,   217,   219,   168,   221,    86,
   225,   121,   227,   134,    85,    83,    82,   168,    81,   162,
    80,    76,   242,   244,   245,   246,   247,   248,    75,    63,
    74,   196,   181,    71,    70,   260,   147,   134,    63,   264,
   265,   266,   267,   268,   269,    69,   272,   273,   274,    67,
   276,   277,   278,   178,    63,    66,   282,    65,    64,   286,
   287,   288,    63,   219,    61,    60,   293,   109,   295,    63,
    59,    58,    45,   301,   274,   302,   303,    44,    43,    42,
   310,   311,    41,   315,   317,   318,   319,    40,    31,   323,
   324,   325,   172,   174 ]

racc_action_check = [
     0,     0,   219,   278,   129,     0,   162,   165,   284,   267,
     0,    54,    54,     0,     0,   278,   129,    26,   100,   165,
   284,   267,    83,   219,   203,   278,   129,   205,   162,   165,
   284,   267,     0,     0,     0,     0,   203,   287,   244,   205,
     0,   222,    83,   139,    26,   100,   203,    85,   139,   205,
   244,   181,   223,   222,   129,    48,   282,   188,     0,   188,
   244,     0,     0,   222,   223,     0,   278,   129,   282,   162,
   165,   284,   267,   181,   223,   103,   138,   130,   282,    27,
   168,    48,    48,   118,   138,    25,   118,   203,   140,   217,
   205,   140,   181,   181,   181,   181,   181,    27,   103,    25,
   130,   244,   168,    25,   222,   217,   217,    28,   206,   206,
    67,    25,    25,    67,    28,   223,     2,     2,     2,   282,
     2,   168,   168,   168,   168,   168,   168,   168,   168,   168,
   168,    18,    18,    66,    18,    18,    66,   309,    80,    80,
   309,   315,   315,   315,   117,   117,   117,   187,    90,   187,
   294,   294,   294,   302,   302,   302,   316,    91,   316,   301,
   301,   301,   250,   250,   250,   291,   270,   291,   270,   189,
    93,   189,   303,   303,   303,   293,   293,   274,   274,    94,
    95,    96,    97,    98,    99,    81,   102,    77,   105,   106,
   107,   109,   110,   114,   115,   116,    76,    75,   120,   121,
   122,   123,   124,   125,   128,    74,    73,   131,   133,   134,
   135,   136,   137,    72,    71,    70,   141,   146,   147,   148,
   149,   150,   151,   152,    68,   163,   164,    65,   166,    64,
   170,   171,   172,   173,   174,   176,   177,   178,   179,    63,
   182,   183,   185,   186,    62,    58,    57,   196,    56,   204,
    55,    53,   211,   212,   213,   214,   215,   216,    51,   218,
    49,   220,   221,    47,    46,   225,   226,   227,   228,   230,
   232,   234,   238,   241,   243,    43,   245,   247,   249,    42,
   252,   253,   259,   261,   262,    40,   269,    39,    37,   275,
   276,   277,    36,   279,    35,    34,   286,    82,   288,   290,
    31,    29,    24,   295,   298,   299,   300,    23,    22,    21,
   304,   308,    20,   310,   311,   312,   313,    19,     1,   318,
   319,   322,   323,   324 ]

racc_action_pointer = [
    -2,   318,   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123,   308,
   299,   300,   299,   294,   289,    72,     4,    66,    76,   236,
   nil,   300,   nil,   nil,   290,   289,   234,   278,   nil,   278,
   272,   nil,   266,   262,   nil,   nil,   226,   246,    42,   219,
   nil,   238,   nil,   213,   -50,   237,   235,   208,   232,   nil,
   nil,   nil,   230,   212,   215,   214,   108,    96,   204,   nil,
   202,   174,   175,   189,   178,   184,   183,   174,   nil,   nil,
    77,   142,   284,     5,   nil,    42,   nil,   nil,   nil,   nil,
   122,   131,   nil,   157,   166,   167,   165,   164,   170,   144,
     5,   nil,   143,    55,   nil,   162,   176,   177,   nil,   148,
   179,   nil,   nil,   nil,   166,   167,   177,   122,    58,   nil,
   155,   170,   162,   158,   184,   165,   nil,   nil,   191,    -1,
    57,   163,   nil,   182,   196,   152,   193,   192,    56,    23,
    63,   197,   nil,   nil,   nil,   nil,   158,   205,   202,   207,
   163,   184,   210,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     1,   167,   213,     2,   184,   nil,    76,   nil,
   164,   203,   206,   208,   208,   nil,   215,   180,   224,   194,
   nil,    47,   227,   225,   nil,   229,   200,   129,    39,   151,
   nil,   nil,   nil,   nil,   nil,   nil,   234,   nil,   nil,   nil,
   nil,   nil,   nil,    19,   232,    22,    54,   nil,   nil,   nil,
   nil,   199,   236,   228,   228,   230,   230,    76,   201,   -34,
   217,   249,    36,    47,   nil,   247,   223,   224,   210,   nil,
   242,   nil,   265,   nil,   203,   nil,   nil,   nil,   228,   nil,
   nil,   218,   nil,   254,    33,   249,   nil,   250,   nil,   258,
   140,   nil,   267,   252,   nil,   nil,   nil,   nil,   nil,   238,
   nil,   224,   226,   nil,   nil,   nil,   nil,     4,   nil,   269,
   148,   nil,   nil,   nil,   148,   268,   273,   278,    -2,   237,
   nil,   nil,    51,   nil,     3,   nil,   276,    24,   281,   nil,
   241,   147,   nil,   146,   128,   290,   nil,   nil,   284,   287,
   288,   137,   122,   141,   290,   nil,   nil,   nil,   294,   112,
   300,   301,   289,   290,   nil,   119,   138,   nil,   292,   293,
   nil,   nil,   308,   294,   298,   nil ]

racc_action_default = [
  -146,  -146,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -146,  -146,
  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,
  -127,  -146,    -2,    -3,  -146,  -146,  -102,  -146,   -23,  -146,
  -146,   -28,  -146,  -146,   -57,   -58,  -146,  -146,  -146,  -146,
   -65,   -66,   -67,  -146,  -146,  -146,  -146,  -146,  -146,   326,
    -4,    -5,   -25,  -146,   -25,  -146,  -146,  -146,   -56,  -144,
  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -108,  -109,
  -146,  -146,  -146,  -146,   -21,  -146,  -103,   -22,   -24,   -27,
  -146,  -146,   -41,  -146,  -146,  -146,   -69,  -146,  -146,  -146,
  -146,   -68,  -146,  -146,  -110,  -146,  -146,  -146,  -117,   -84,
  -146,  -120,  -121,   -26,  -146,  -146,  -146,  -146,   -30,  -145,
   -71,  -146,  -146,   -84,  -146,  -146,   -64,  -106,  -146,  -146,
   -84,  -113,  -114,  -146,  -146,  -102,  -146,  -122,  -146,  -146,
  -146,  -146,   -36,   -37,   -38,   -31,  -104,  -146,  -146,  -146,
  -102,  -146,  -146,  -111,  -112,  -128,  -129,  -130,  -131,  -132,
  -133,  -134,  -146,  -102,  -146,  -146,   -85,   -86,  -146,  -118,
  -146,  -146,  -146,  -146,  -146,   -29,   -32,   -99,  -146,   -72,
   -73,  -146,  -146,   -69,   -61,  -146,   -84,  -146,  -146,  -146,
  -138,  -140,  -142,  -107,  -115,  -116,  -146,   -78,   -79,   -80,
   -81,   -82,   -83,  -146,  -146,  -146,  -146,   -92,   -93,   -94,
   -95,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -102,  -146,
  -105,  -146,  -146,  -146,   -77,  -146,   -71,   -84,  -102,  -135,
  -146,  -136,  -146,  -137,  -146,   -87,   -88,   -89,  -146,   -91,
   -97,  -146,   -96,  -119,  -146,  -146,   -42,  -146,   -43,   -33,
  -146,   -44,  -146,  -146,   -59,  -100,  -101,   -74,   -75,  -146,
   -70,  -104,  -102,   -63,  -139,  -141,  -143,  -146,   -98,  -146,
  -146,  -125,   -39,   -40,  -146,  -146,  -146,  -146,  -146,   -99,
   -62,   -90,  -146,  -123,  -146,   -45,   -34,  -146,  -146,   -76,
  -102,  -146,  -126,  -146,  -146,  -146,   -60,  -124,   -35,  -146,
  -146,  -146,  -146,  -146,   -49,   -46,   -51,   -52,  -146,   -47,
  -146,  -146,  -146,  -146,   -48,  -146,  -146,   -54,  -146,  -146,
   -50,   -53,  -146,  -146,  -146,   -55 ]

racc_goto_table = [
    62,   141,   155,   135,   177,   146,   218,   120,    11,    12,
   249,    89,    46,    53,   180,    68,   132,   150,   166,   270,
   103,    77,   108,   207,   163,    84,     1,    87,   305,   309,
   316,   285,   314,   300,   116,    72,   224,    17,   195,    16,
    15,    14,   179,   126,   127,    13,   222,   106,    10,   130,
     9,     8,   235,   203,   237,   239,   208,   291,     7,     6,
   153,   154,   220,   145,   131,     5,   136,   243,     2,   187,
   188,   189,   nil,   194,   nil,   nil,   236,   nil,   238,   nil,
   228,   nil,   137,   nil,   nil,   175,   298,   125,   257,   nil,
   nil,   111,   112,   nil,   226,   258,   259,   nil,   nil,   169,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   290,   nil,
   nil,   261,   nil,   nil,   184,   nil,   nil,   nil,   nil,   279,
   nil,   262,   nil,   nil,   nil,   nil,   nil,   193,   nil,   nil,
   nil,   nil,   nil,   nil,   275,   nil,   nil,   nil,   nil,   nil,
   281,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   289,   nil,   nil,   nil,   nil,   nil,   292,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   299,   nil,
   nil,   nil,   254,   nil,   nil,   304,   nil,   nil,   nil,   nil,
   nil,   nil,   263,   nil,   nil,   nil,   nil,   nil,   nil,   320,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   280,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   296 ]

racc_goto_check = [
    16,    20,    39,    33,    31,    30,    32,    29,     9,    10,
    21,    18,    28,    28,    37,    27,    52,    33,    41,    55,
    48,    47,    34,    40,    33,    17,     1,    17,    24,    24,
    26,    23,    22,    25,    19,    28,    40,    15,    39,    14,
    13,    12,    36,    34,    34,    11,    38,    47,     8,    48,
     7,     6,    42,    43,    44,    45,    46,    55,     5,     4,
    49,    50,    41,    18,    51,     3,    53,    54,     2,    57,
    58,    59,   nil,    52,   nil,   nil,    39,   nil,    39,   nil,
    33,   nil,    27,   nil,   nil,    18,    21,    28,    37,   nil,
   nil,     9,    10,   nil,    29,    39,    39,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,   nil,
   nil,    30,   nil,   nil,    16,   nil,   nil,   nil,   nil,    31,
   nil,    33,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,
   nil,   nil,   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,
    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    39,   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    20,   nil,
   nil,   nil,    16,   nil,   nil,    20,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,    20,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    26,    68,    65,    59,    58,    51,    50,    48,     8,
     9,    45,    41,    40,    39,    37,   -36,   -37,   -55,   -59,
  -116,  -207,  -277,  -243,  -274,  -262,  -281,   -28,   -13,   -89,
  -115,  -142,  -171,  -106,   -59,   nil,  -105,  -133,  -135,  -127,
  -145,  -116,  -144,  -115,  -150,  -151,  -112,   -33,   -57,   -68,
   -68,   -43,   -91,   -44,  -145,  -225,   nil,   -93,   -92,   -91 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    92,   251,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    51,   nil,   nil,   nil,   271,
   nil,   nil,   167,   nil,   158,   nil,   nil,   nil,   nil,   104,
   nil,   nil,   nil,   nil,   nil,   nil,   157,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 70, :_reduce_1,
  2, 70, :_reduce_2,
  2, 70, :_reduce_3,
  3, 70, :_reduce_4,
  3, 70, :_reduce_5,
  1, 70, :_reduce_6,
  1, 70, :_reduce_7,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  4, 72, :_reduce_21,
  4, 72, :_reduce_22,
  2, 72, :_reduce_23,
  4, 72, :_reduce_24,
  0, 86, :_reduce_none,
  2, 86, :_reduce_26,
  4, 73, :_reduce_27,
  2, 74, :_reduce_28,
  7, 75, :_reduce_29,
  5, 75, :_reduce_30,
  6, 75, :_reduce_31,
  3, 88, :_reduce_32,
  5, 88, :_reduce_33,
  7, 88, :_reduce_34,
  9, 88, :_reduce_35,
  1, 89, :_reduce_36,
  1, 89, :_reduce_37,
  1, 89, :_reduce_38,
  7, 87, :_reduce_39,
  7, 87, :_reduce_40,
  1, 87, :_reduce_none,
  6, 91, :_reduce_42,
  6, 91, :_reduce_43,
  1, 90, :_reduce_44,
  3, 90, :_reduce_45,
  7, 92, :_reduce_46,
  7, 92, :_reduce_47,
  8, 92, :_reduce_48,
  2, 94, :_reduce_49,
  5, 94, :_reduce_50,
  1, 93, :_reduce_51,
  1, 93, :_reduce_52,
  4, 93, :_reduce_53,
  1, 95, :_reduce_54,
  3, 95, :_reduce_55,
  3, 76, :_reduce_56,
  2, 77, :_reduce_57,
  2, 77, :_reduce_58,
  9, 78, :_reduce_59,
  12, 78, :_reduce_60,
  7, 79, :_reduce_61,
  10, 79, :_reduce_62,
  9, 79, :_reduce_63,
  5, 80, :_reduce_64,
  1, 97, :_reduce_65,
  1, 97, :_reduce_66,
  1, 104, :_reduce_67,
  3, 104, :_reduce_68,
  0, 98, :_reduce_none,
  5, 98, :_reduce_70,
  0, 99, :_reduce_none,
  2, 99, :_reduce_72,
  1, 105, :_reduce_73,
  3, 105, :_reduce_74,
  3, 106, :_reduce_75,
  5, 106, :_reduce_76,
  1, 107, :_reduce_none,
  1, 109, :_reduce_78,
  1, 109, :_reduce_79,
  1, 109, :_reduce_80,
  1, 109, :_reduce_81,
  1, 109, :_reduce_82,
  1, 109, :_reduce_none,
  0, 102, :_reduce_none,
  2, 102, :_reduce_85,
  1, 110, :_reduce_86,
  3, 110, :_reduce_87,
  3, 111, :_reduce_88,
  3, 111, :_reduce_89,
  5, 111, :_reduce_90,
  3, 111, :_reduce_91,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_94,
  1, 115, :_reduce_none,
  2, 115, :_reduce_96,
  1, 114, :_reduce_97,
  2, 114, :_reduce_98,
  0, 101, :_reduce_none,
  2, 101, :_reduce_100,
  2, 101, :_reduce_101,
  0, 85, :_reduce_none,
  2, 85, :_reduce_103,
  0, 100, :_reduce_none,
  2, 100, :_reduce_105,
  5, 81, :_reduce_106,
  7, 81, :_reduce_107,
  1, 116, :_reduce_108,
  1, 116, :_reduce_109,
  1, 117, :_reduce_110,
  3, 117, :_reduce_111,
  3, 118, :_reduce_112,
  2, 103, :_reduce_113,
  1, 120, :_reduce_114,
  3, 120, :_reduce_115,
  3, 121, :_reduce_116,
  4, 82, :_reduce_117,
  6, 82, :_reduce_118,
  8, 83, :_reduce_119,
  4, 83, :_reduce_120,
  4, 83, :_reduce_121,
  1, 122, :_reduce_none,
  3, 123, :_reduce_123,
  5, 123, :_reduce_124,
  1, 124, :_reduce_125,
  3, 124, :_reduce_126,
  1, 84, :_reduce_127,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  3, 113, :_reduce_135,
  3, 113, :_reduce_136,
  3, 113, :_reduce_137,
  1, 126, :_reduce_138,
  3, 126, :_reduce_139,
  1, 127, :_reduce_140,
  3, 127, :_reduce_141,
  1, 128, :_reduce_142,
  3, 128, :_reduce_143,
  1, 96, :_reduce_144,
  3, 96, :_reduce_145 ]

racc_reduce_n = 146

racc_shift_n = 326

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :USE => 16,
  "(" => 17,
  ")" => 18,
  :HASH => 19,
  "," => 20,
  :RANGE => 21,
  :STRING => 22,
  :NUMBER => 23,
  :BINARY => 24,
  :READ => 25,
  :EQ => 26,
  :NUMBER_VALUE => 27,
  :WRITE => 28,
  :INDEX => 29,
  :GLOBAL => 30,
  :ALL => 31,
  :KEYS_ONLY => 32,
  :INCLUDE => 33,
  :DROP => 34,
  :DESCRIBE => 35,
  :DESC => 36,
  :SELECT => 37,
  :FROM => 38,
  :COUNT => 39,
  "*" => 40,
  "/" => 41,
  :GET => 42,
  :WHERE => 43,
  :AND => 44,
  :BETWEEN => 45,
  :LE => 46,
  :LT => 47,
  :GE => 48,
  :BEGINS_WITH => 49,
  :IN => 50,
  :IS => 51,
  :NE => 52,
  :CONTAINS => 53,
  :NOT => 54,
  :NULL => 55,
  :ORDER => 56,
  :ASC => 57,
  :LIMIT => 58,
  :HAVING => 59,
  :UPDATE => 60,
  :SET => 61,
  :ADD => 62,
  :DELETE => 63,
  :INSERT => 64,
  :INTO => 65,
  :VALUES => 66,
  :NEXT => 67,
  :BINARY_VALUE => 68 }

racc_nt_base = 69

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "USE",
  "\"(\"",
  "\")\"",
  "HASH",
  "\",\"",
  "RANGE",
  "STRING",
  "NUMBER",
  "BINARY",
  "READ",
  "EQ",
  "NUMBER_VALUE",
  "WRITE",
  "INDEX",
  "GLOBAL",
  "ALL",
  "KEYS_ONLY",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "create_definition",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "attr_to_update",
  "value_or_null",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :capacity => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_28(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 81)
  def _reduce_29(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 85)
  def _reduce_30(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 89)
  def _reduce_31(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 94)
  def _reduce_32(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 98)
  def _reduce_33(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 102)
  def _reduce_34(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 106)
  def _reduce_35(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 111)
  def _reduce_36(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 115)
  def _reduce_37(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 119)
  def _reduce_38(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 124)
  def _reduce_39(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 128)
  def _reduce_40(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 134)
  def _reduce_42(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 138)
  def _reduce_43(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 143)
  def _reduce_44(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 147)
  def _reduce_45(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 152)
  def _reduce_46(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 156)
  def _reduce_47(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 160)
  def _reduce_48(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 165)
  def _reduce_49(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 169)
  def _reduce_50(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 177)
  def _reduce_51(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 181)
  def _reduce_52(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 185)
  def _reduce_53(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 190)
  def _reduce_54(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 194)
  def _reduce_55(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 199)
  def _reduce_56(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_57(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 208)
  def _reduce_58(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 213)
  def _reduce_59(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 217)
  def _reduce_60(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 222)
  def _reduce_61(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 226)
  def _reduce_62(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 230)
  def _reduce_63(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 235)
  def _reduce_64(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 240)
  def _reduce_65(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 244)
  def _reduce_66(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 249)
  def _reduce_67(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 253)
  def _reduce_68(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 259)
  def _reduce_70(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 265)
  def _reduce_72(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 270)
  def _reduce_73(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 274)
  def _reduce_74(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 279)
  def _reduce_75(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 283)
  def _reduce_76(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 290)
  def _reduce_78(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 294)
  def _reduce_79(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 298)
  def _reduce_80(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 302)
  def _reduce_81(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 306)
  def _reduce_82(val, _values)
                          :GT
                    
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 313)
  def _reduce_85(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 318)
  def _reduce_86(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 322)
  def _reduce_87(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 327)
  def _reduce_88(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 331)
  def _reduce_89(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 335)
  def _reduce_90(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 339)
  def _reduce_91(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 345)
  def _reduce_94(val, _values)
                      :NE
                
  end
.,.,

# reduce 95 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 351)
  def _reduce_96(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 355)
  def _reduce_97(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 359)
  def _reduce_98(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 99 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 365)
  def _reduce_100(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 369)
  def _reduce_101(val, _values)
                       false
                 
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 375)
  def _reduce_103(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 104 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 381)
  def _reduce_105(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 386)
  def _reduce_106(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 390)
  def _reduce_107(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 395)
  def _reduce_108(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 399)
  def _reduce_109(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 404)
  def _reduce_110(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 408)
  def _reduce_111(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 413)
  def _reduce_112(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 418)
  def _reduce_113(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 423)
  def _reduce_114(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 427)
  def _reduce_115(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 432)
  def _reduce_116(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 437)
  def _reduce_117(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 441)
  def _reduce_118(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 446)
  def _reduce_119(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 450)
  def _reduce_120(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 454)
  def _reduce_121(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 122 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 461)
  def _reduce_123(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 465)
  def _reduce_124(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 470)
  def _reduce_125(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 474)
  def _reduce_126(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 479)
  def _reduce_127(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 493)
  def _reduce_135(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 497)
  def _reduce_136(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 501)
  def _reduce_137(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 506)
  def _reduce_138(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 510)
  def _reduce_139(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 515)
  def _reduce_140(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 519)
  def _reduce_141(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 524)
  def _reduce_142(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 528)
  def _reduce_143(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 533)
  def _reduce_144(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 537)
  def _reduce_145(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
