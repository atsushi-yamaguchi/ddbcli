#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 576)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEXT
  NOT
  NUMBER
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.scan /NULL/i)
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_:/]*|i)
      yield [:IDENTIFIER, tok]
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   165,   165,   201,   165,   308,   265,   240,   269,   165,   165,
   119,    52,   111,    52,   167,   167,   165,   167,    52,   266,
   120,   165,   167,   167,   164,   164,   200,   164,   268,   165,
   167,    25,   164,   164,   165,   167,   165,   165,    73,    50,
   164,    50,   165,   167,    54,   164,    50,   177,   167,   121,
   167,   167,   159,   164,   239,   178,   167,    95,   164,   130,
   164,   164,    94,    55,   163,   163,   164,   163,   166,   166,
   202,   166,   163,   163,   130,    57,   166,   166,     3,     4,
   163,   136,    56,    18,   166,   163,   123,   179,    21,   166,
   124,    19,   180,   163,    20,   265,   108,   166,   163,   125,
   163,   163,   166,   211,   166,   166,   163,    52,   126,   266,
   166,    22,    23,    24,    25,   211,   116,    90,   263,    26,
   108,    91,   265,    49,    92,   115,    48,   207,    91,    36,
    37,    92,    38,    39,    47,    50,   266,    27,   131,   207,
    28,    29,    78,    79,    30,   215,   208,   209,   210,   212,
   214,   216,   219,   220,   221,   193,   196,   233,   208,   209,
   210,   212,    32,    33,    34,    91,    35,   327,    92,    91,
   328,   106,    92,   145,   146,   147,   145,   146,   147,   321,
   322,   323,   242,   135,   243,   145,   146,   147,   244,   246,
   245,   247,   321,   322,   323,   145,   146,   147,   145,   146,
   147,   312,   336,   299,   337,   298,   136,   299,   254,   253,
    78,    79,    69,   140,   141,   142,   143,   114,   110,   150,
   151,   152,   136,   154,   155,   106,   108,   106,   169,   170,
   173,    63,   175,    96,   103,   102,   101,   100,   182,   184,
   187,   188,   189,    63,   191,   192,    99,    98,    63,   135,
    97,   206,    96,   222,   223,   224,   225,   226,   227,   229,
   173,   231,    88,   235,   123,   237,   136,    85,   241,    86,
    85,    83,   173,    82,   167,    81,    80,   255,   257,   258,
   259,   260,   261,    76,    63,    75,   206,   187,    74,    71,
   273,   150,   136,    63,   196,    70,   279,   280,   281,   282,
   283,   284,    69,   287,   288,   289,    67,   291,   292,   293,
   184,    63,    66,   297,    65,    64,   301,   302,   303,    63,
   229,    61,    60,   117,   309,   310,    63,    59,    58,    45,
   316,   289,   317,   318,    44,    43,    42,   325,   326,    41,
   330,   332,   333,   334,    40,    31,   338,   339,   340,   178,
   180 ]

racc_action_check = [
   257,   131,   167,   170,   301,   289,   194,   229,   293,   297,
    94,    48,    83,    26,   257,   131,   299,   170,   101,   289,
    95,   213,   293,   297,   257,   131,   167,   170,   229,   215,
   299,    83,   293,   297,   282,   213,   233,   241,    48,    48,
   299,    26,   232,   215,    27,   213,   101,   141,   282,    96,
   233,   241,   131,   215,   194,   141,   232,    67,   282,   132,
   233,   241,    67,    27,   257,   131,   232,   170,   257,   131,
   167,   170,   293,   297,   104,    28,   293,   297,     0,     0,
   299,   132,    28,     0,   299,   213,    97,   142,     0,   213,
    98,     0,   142,   215,     0,   308,   104,   215,   282,    99,
   233,   241,   282,   173,   233,   241,   232,    25,   100,   308,
   232,     0,     0,     0,     0,   187,    91,    66,   227,     0,
   103,   120,   227,    25,   120,    90,    25,   173,    66,    18,
    18,    66,    18,    18,    25,    25,   227,     0,   106,   187,
     0,     0,    80,    80,     0,   173,   173,   173,   173,   173,
   173,   173,   173,   173,   173,   163,   163,   187,   187,   187,
   187,   187,     2,     2,     2,   140,     2,   324,   140,   143,
   324,   107,   143,   330,   330,   330,   309,   309,   309,   318,
   318,   318,   197,   108,   197,   119,   119,   119,   198,   199,
   198,   199,   317,   317,   317,   316,   316,   316,   263,   263,
   263,   306,   331,   306,   331,   285,   110,   285,   216,   216,
    54,    54,   111,   115,   116,   117,   118,    85,    82,   122,
   123,   124,   125,   126,   127,   130,    81,    77,   133,   135,
   136,   137,   138,   139,    76,    75,    74,    73,   144,   149,
   150,   151,   152,   153,   154,   155,    72,    71,   168,   169,
    70,   171,    68,   175,   177,   178,   179,   180,   182,   183,
   184,   185,    65,   188,   189,   191,   192,    64,   196,    63,
    62,    58,   206,    57,   214,    56,    55,   221,   222,   223,
   224,   225,   226,    53,   228,    51,   230,   231,    49,    47,
   235,   236,   237,   238,   240,    46,   243,   245,   247,   251,
   254,   256,    43,   258,   260,   262,    42,   265,   266,   272,
   274,   275,    40,   284,    39,    37,   290,   291,   292,    36,
   294,    35,    34,    92,   302,   303,   305,    31,    29,    24,
   310,   313,   314,   315,    23,    22,    21,   319,   323,    20,
   325,   326,   327,   328,    19,     1,   333,   334,   337,   338,
   339 ]

racc_action_pointer = [
    76,   345,   160,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,   335,
   326,   327,   326,   321,   316,    94,     0,    31,    43,   262,
   nil,   327,   nil,   nil,   317,   316,   260,   305,   nil,   305,
   299,   nil,   293,   289,   nil,   nil,   256,   270,    -2,   246,
   nil,   263,   nil,   244,   148,   263,   262,   234,   258,   nil,
   nil,   nil,   256,   240,   253,   249,   101,    43,   230,   nil,
   237,   206,   207,   218,   207,   222,   221,   214,   nil,   nil,
    80,   182,   205,    -7,   nil,   212,   nil,   nil,   nil,   nil,
   108,    88,   295,   nil,    -3,     7,    36,    68,    70,    86,
    67,     5,   nil,    76,    52,   nil,   110,   158,   170,   nil,
   162,   199,   nil,   nil,   nil,   200,   185,   186,   196,   161,
    94,   nil,   175,   203,   182,   178,   203,   185,   nil,   nil,
   212,    -4,    37,   183,   nil,   201,   217,   172,   212,   211,
   138,    25,    65,   142,   217,   nil,   nil,   nil,   nil,   179,
   227,   222,   229,   184,   205,   232,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    85,   nil,   nil,   nil,    -3,   189,   236,
    -2,   206,   nil,    99,   nil,   186,   nil,   224,   227,   229,
   229,   nil,   236,   202,   247,   216,   nil,   111,   250,   246,
   nil,   252,   222,   nil,   -16,   nil,   196,   162,   168,   169,
   nil,   nil,   nil,   nil,   nil,   nil,   259,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   255,    24,   153,   nil,   nil,   nil,
   nil,   223,   259,   251,   251,   253,   253,   105,   225,   -30,
   241,   274,    37,    31,   nil,   270,   247,   248,   234,   nil,
   223,    32,   nil,   267,   nil,   292,   nil,   225,   nil,   nil,
   nil,   254,   nil,   nil,   244,   nil,   279,    -5,   274,   nil,
   275,   nil,   283,   174,   nil,   294,   291,   nil,   nil,   nil,
   nil,   nil,   264,   nil,   250,   252,   nil,   nil,   nil,   nil,
   nil,   nil,    29,   nil,   294,   185,   nil,   nil,   nil,   -12,
   293,   298,   305,     3,   263,   nil,   nil,     4,   nil,    11,
   nil,   -18,   311,   306,   nil,   267,   181,   nil,    78,   152,
   317,   nil,   nil,   309,   312,   313,   171,   160,   147,   315,
   nil,   nil,   nil,   319,   140,   327,   328,   314,   315,   nil,
   149,   182,   nil,   317,   318,   nil,   nil,   335,   319,   323,
   nil ]

racc_action_default = [
  -153,  -153,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -153,  -153,
  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
  -128,  -153,    -2,    -3,  -153,  -153,  -103,  -153,   -23,  -153,
  -153,   -29,  -153,  -153,   -58,   -59,  -153,  -153,  -153,  -153,
   -66,   -67,   -68,  -153,  -153,  -153,  -153,  -153,  -153,   341,
    -4,    -5,   -25,  -153,   -25,  -153,  -153,  -153,   -57,  -151,
  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -109,  -110,
  -153,  -153,  -153,  -153,   -21,  -153,  -104,   -22,   -24,   -27,
  -153,  -153,  -153,   -42,  -153,  -153,  -153,   -70,  -153,  -153,
  -153,  -153,   -69,  -153,  -153,  -111,  -153,  -153,  -153,  -118,
   -85,  -153,  -121,  -122,   -26,  -153,  -153,  -153,  -153,  -153,
   -31,  -152,   -72,  -153,  -153,   -85,  -153,  -153,   -65,  -107,
  -153,  -153,   -85,  -114,  -115,  -153,  -153,  -103,  -153,  -123,
  -153,  -153,  -153,  -153,  -153,   -37,   -38,   -39,   -32,  -105,
  -153,  -153,  -153,  -103,  -153,  -153,  -112,  -113,  -129,  -130,
  -131,  -132,  -133,  -153,  -139,  -140,  -141,  -153,  -103,  -153,
  -153,   -86,   -87,  -153,  -119,  -153,   -28,  -153,  -153,  -153,
  -153,   -30,   -33,  -100,  -153,   -73,   -74,  -153,  -153,   -70,
   -62,  -153,   -85,  -134,  -153,  -136,  -153,  -153,  -153,  -153,
  -145,  -147,  -149,  -108,  -116,  -117,  -153,   -79,   -80,   -81,
   -82,   -83,   -84,  -153,  -153,  -153,  -153,   -93,   -94,   -95,
   -96,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -103,  -153,
  -106,  -153,  -153,  -153,   -78,  -153,   -72,   -85,  -103,  -135,
  -153,  -153,  -142,  -153,  -143,  -153,  -144,  -153,   -88,   -89,
   -90,  -153,   -92,   -98,  -153,   -97,  -120,  -153,  -153,   -43,
  -153,   -44,   -34,  -153,   -45,  -153,  -153,   -60,  -101,  -102,
   -75,   -76,  -153,   -71,  -105,  -103,   -64,  -137,  -138,  -146,
  -148,  -150,  -153,   -99,  -153,  -153,  -126,   -40,   -41,  -153,
  -153,  -153,  -153,  -153,  -100,   -63,   -91,  -153,  -124,  -153,
   -46,   -35,  -153,  -153,   -77,  -103,  -153,  -127,  -153,  -153,
  -153,   -61,  -125,   -36,  -153,  -153,  -153,  -153,  -153,   -50,
   -47,   -52,   -53,  -153,   -48,  -153,  -153,  -153,  -153,   -49,
  -153,  -153,   -55,  -153,  -153,   -51,   -54,  -153,  -153,  -153,
   -56 ]

racc_goto_table = [
    62,   144,   158,   137,   183,   149,   122,   228,    11,    12,
   195,    68,   262,   186,    46,    53,   134,   171,   153,   285,
   104,    77,    89,   109,   217,   168,    84,     1,    87,   320,
   324,   315,   300,   329,   331,   118,    17,    72,   234,    16,
    15,   205,   185,    14,   232,   128,   129,   107,    13,    10,
   132,     9,   248,   213,   250,   252,   218,     8,     7,   306,
   156,   157,   133,     6,   138,   230,   256,     5,   194,     2,
   197,   198,   199,   nil,   nil,   nil,   148,   204,   nil,   139,
   nil,   nil,   nil,   nil,   249,   238,   251,   277,   nil,   nil,
   127,   112,   113,   313,   270,   nil,   176,   nil,   236,   181,
   nil,   174,   nil,   271,   272,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   278,   nil,   nil,   nil,   nil,   190,   305,   274,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   294,
   275,   nil,   203,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   290,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   296,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   304,   nil,   nil,   nil,   nil,   nil,
   307,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   314,   267,   nil,   nil,   nil,   nil,   nil,   319,   nil,
   nil,   nil,   276,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   335,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   295,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   311 ]

racc_goto_check = [
    16,    20,    39,    33,    31,    30,    29,    32,     9,    10,
    59,    27,    21,    37,    28,    28,    52,    41,    33,    55,
    48,    47,    18,    34,    40,    33,    17,     1,    17,    24,
    24,    25,    23,    22,    26,    19,    15,    28,    40,    14,
    13,    39,    36,    12,    38,    34,    34,    47,    11,     8,
    48,     7,    42,    43,    44,    45,    46,     6,     5,    55,
    49,    50,    51,     4,    53,    41,    54,     3,    58,     2,
    60,    61,    62,   nil,   nil,   nil,    18,    52,   nil,    27,
   nil,   nil,   nil,   nil,    39,    33,    39,    59,   nil,   nil,
    28,     9,    10,    21,    37,   nil,    18,   nil,    29,    18,
   nil,    16,   nil,    39,    39,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    39,   nil,   nil,   nil,   nil,    16,    32,    30,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,
    33,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    20,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,
    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    20,    16,   nil,   nil,   nil,   nil,   nil,    20,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    27,    69,    67,    63,    58,    57,    51,    49,     8,
     9,    48,    43,    40,    39,    36,   -36,   -36,   -44,   -59,
  -118,  -215,  -291,  -257,  -288,  -279,  -292,   -32,   -11,   -91,
  -117,  -145,  -176,  -107,   -58,   nil,  -108,  -137,  -143,  -129,
  -149,  -119,  -154,  -120,  -160,  -161,  -117,   -33,   -57,   -70,
   -70,   -46,   -92,   -47,  -156,  -238,   nil,   nil,   -95,  -153,
   -97,   -96,   -95 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    93,   264,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    51,   nil,   nil,   nil,   286,
   nil,   nil,   172,   nil,   162,   nil,   nil,   nil,   nil,   105,
   nil,   nil,   nil,   nil,   nil,   nil,   160,   161,   nil,   nil,
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 75, :_reduce_1,
  2, 75, :_reduce_2,
  2, 75, :_reduce_3,
  3, 75, :_reduce_4,
  3, 75, :_reduce_5,
  1, 75, :_reduce_6,
  1, 75, :_reduce_7,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  4, 77, :_reduce_21,
  4, 77, :_reduce_22,
  2, 77, :_reduce_23,
  4, 77, :_reduce_24,
  0, 91, :_reduce_none,
  2, 91, :_reduce_26,
  4, 78, :_reduce_27,
  7, 78, :_reduce_28,
  2, 79, :_reduce_29,
  7, 80, :_reduce_30,
  5, 80, :_reduce_31,
  6, 80, :_reduce_32,
  3, 93, :_reduce_33,
  5, 93, :_reduce_34,
  7, 93, :_reduce_35,
  9, 93, :_reduce_36,
  1, 94, :_reduce_37,
  1, 94, :_reduce_38,
  1, 94, :_reduce_39,
  7, 92, :_reduce_40,
  7, 92, :_reduce_41,
  1, 92, :_reduce_none,
  6, 96, :_reduce_43,
  6, 96, :_reduce_44,
  1, 95, :_reduce_45,
  3, 95, :_reduce_46,
  7, 97, :_reduce_47,
  7, 97, :_reduce_48,
  8, 97, :_reduce_49,
  2, 99, :_reduce_50,
  5, 99, :_reduce_51,
  1, 98, :_reduce_52,
  1, 98, :_reduce_53,
  4, 98, :_reduce_54,
  1, 100, :_reduce_55,
  3, 100, :_reduce_56,
  3, 81, :_reduce_57,
  2, 82, :_reduce_58,
  2, 82, :_reduce_59,
  9, 83, :_reduce_60,
  12, 83, :_reduce_61,
  7, 84, :_reduce_62,
  10, 84, :_reduce_63,
  9, 84, :_reduce_64,
  5, 85, :_reduce_65,
  1, 102, :_reduce_66,
  1, 102, :_reduce_67,
  1, 109, :_reduce_68,
  3, 109, :_reduce_69,
  0, 103, :_reduce_none,
  5, 103, :_reduce_71,
  0, 104, :_reduce_none,
  2, 104, :_reduce_73,
  1, 110, :_reduce_74,
  3, 110, :_reduce_75,
  3, 111, :_reduce_76,
  5, 111, :_reduce_77,
  1, 112, :_reduce_none,
  1, 114, :_reduce_79,
  1, 114, :_reduce_80,
  1, 114, :_reduce_81,
  1, 114, :_reduce_82,
  1, 114, :_reduce_83,
  1, 114, :_reduce_none,
  0, 107, :_reduce_none,
  2, 107, :_reduce_86,
  1, 115, :_reduce_87,
  3, 115, :_reduce_88,
  3, 116, :_reduce_89,
  3, 116, :_reduce_90,
  5, 116, :_reduce_91,
  3, 116, :_reduce_92,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  1, 117, :_reduce_95,
  1, 120, :_reduce_none,
  2, 120, :_reduce_97,
  1, 119, :_reduce_98,
  2, 119, :_reduce_99,
  0, 106, :_reduce_none,
  2, 106, :_reduce_101,
  2, 106, :_reduce_102,
  0, 90, :_reduce_none,
  2, 90, :_reduce_104,
  0, 105, :_reduce_none,
  2, 105, :_reduce_106,
  5, 86, :_reduce_107,
  7, 86, :_reduce_108,
  1, 121, :_reduce_109,
  1, 121, :_reduce_110,
  1, 122, :_reduce_111,
  3, 122, :_reduce_112,
  3, 123, :_reduce_113,
  2, 108, :_reduce_114,
  1, 125, :_reduce_115,
  3, 125, :_reduce_116,
  3, 126, :_reduce_117,
  4, 87, :_reduce_118,
  6, 87, :_reduce_119,
  8, 88, :_reduce_120,
  4, 88, :_reduce_121,
  4, 88, :_reduce_122,
  1, 127, :_reduce_none,
  3, 128, :_reduce_124,
  5, 128, :_reduce_125,
  1, 129, :_reduce_126,
  3, 129, :_reduce_127,
  1, 89, :_reduce_128,
  1, 124, :_reduce_none,
  1, 124, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  2, 131, :_reduce_134,
  3, 131, :_reduce_135,
  1, 132, :_reduce_none,
  3, 132, :_reduce_137,
  3, 133, :_reduce_138,
  1, 130, :_reduce_none,
  1, 130, :_reduce_none,
  1, 130, :_reduce_none,
  3, 118, :_reduce_142,
  3, 118, :_reduce_143,
  3, 118, :_reduce_144,
  1, 134, :_reduce_145,
  3, 134, :_reduce_146,
  1, 135, :_reduce_147,
  3, 135, :_reduce_148,
  1, 136, :_reduce_149,
  3, 136, :_reduce_150,
  1, 101, :_reduce_151,
  3, 101, :_reduce_152 ]

racc_reduce_n = 153

racc_shift_n = 341

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  "(" => 19,
  ")" => 20,
  :HASH => 21,
  "," => 22,
  :RANGE => 23,
  :STRING => 24,
  :NUMBER => 25,
  :BINARY => 26,
  :READ => 27,
  :EQ => 28,
  :NUMBER_VALUE => 29,
  :WRITE => 30,
  :GLOBAL => 31,
  :ALL => 32,
  :KEYS_ONLY => 33,
  :INCLUDE => 34,
  :DROP => 35,
  :DESCRIBE => 36,
  :DESC => 37,
  :SELECT => 38,
  :FROM => 39,
  :COUNT => 40,
  "*" => 41,
  "/" => 42,
  :GET => 43,
  :WHERE => 44,
  :AND => 45,
  :BETWEEN => 46,
  :LE => 47,
  :LT => 48,
  :GE => 49,
  :BEGINS_WITH => 50,
  :IN => 51,
  :IS => 52,
  :NE => 53,
  :CONTAINS => 54,
  :NOT => 55,
  :NULL => 56,
  :ORDER => 57,
  :ASC => 58,
  :LIMIT => 59,
  :HAVING => 60,
  :UPDATE => 61,
  :SET => 62,
  :ADD => 63,
  :DELETE => 64,
  :INSERT => 65,
  :INTO => 66,
  :VALUES => 67,
  :NEXT => 68,
  "{" => 69,
  "}" => 70,
  :identifier => 71,
  ":" => 72,
  :BINARY_VALUE => 73 }

racc_nt_base = 74

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "\"(\"",
  "\")\"",
  "HASH",
  "\",\"",
  "RANGE",
  "STRING",
  "NUMBER",
  "BINARY",
  "READ",
  "EQ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "KEYS_ONLY",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "\"{\"",
  "\"}\"",
  "identifier",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "create_definition",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "attr_to_update",
  "value_or_null",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "map",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_28(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => val[5], :capacity => val[6])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 81)
  def _reduce_29(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 86)
  def _reduce_30(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 90)
  def _reduce_31(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 94)
  def _reduce_32(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 99)
  def _reduce_33(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 103)
  def _reduce_34(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 107)
  def _reduce_35(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 111)
  def _reduce_36(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 116)
  def _reduce_37(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 120)
  def _reduce_38(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 124)
  def _reduce_39(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 129)
  def _reduce_40(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 133)
  def _reduce_41(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 139)
  def _reduce_43(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 143)
  def _reduce_44(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 148)
  def _reduce_45(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 152)
  def _reduce_46(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 157)
  def _reduce_47(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 161)
  def _reduce_48(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 165)
  def _reduce_49(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 170)
  def _reduce_50(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 174)
  def _reduce_51(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 182)
  def _reduce_52(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 186)
  def _reduce_53(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 190)
  def _reduce_54(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 195)
  def _reduce_55(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 199)
  def _reduce_56(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_57(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 209)
  def _reduce_58(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 213)
  def _reduce_59(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 218)
  def _reduce_60(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 222)
  def _reduce_61(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 227)
  def _reduce_62(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 231)
  def _reduce_63(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 235)
  def _reduce_64(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 240)
  def _reduce_65(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 245)
  def _reduce_66(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 249)
  def _reduce_67(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 254)
  def _reduce_68(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 258)
  def _reduce_69(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 264)
  def _reduce_71(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 270)
  def _reduce_73(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 275)
  def _reduce_74(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 279)
  def _reduce_75(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 284)
  def _reduce_76(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 288)
  def _reduce_77(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 78 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 295)
  def _reduce_79(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 299)
  def _reduce_80(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 303)
  def _reduce_81(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 307)
  def _reduce_82(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 311)
  def _reduce_83(val, _values)
                          :GT
                    
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 318)
  def _reduce_86(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 323)
  def _reduce_87(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 327)
  def _reduce_88(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 332)
  def _reduce_89(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 336)
  def _reduce_90(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 340)
  def _reduce_91(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 344)
  def _reduce_92(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 350)
  def _reduce_95(val, _values)
                      :NE
                
  end
.,.,

# reduce 96 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 356)
  def _reduce_97(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 360)
  def _reduce_98(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 364)
  def _reduce_99(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 370)
  def _reduce_101(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 374)
  def _reduce_102(val, _values)
                       false
                 
  end
.,.,

# reduce 103 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 380)
  def _reduce_104(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 386)
  def _reduce_106(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 391)
  def _reduce_107(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 395)
  def _reduce_108(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 400)
  def _reduce_109(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 404)
  def _reduce_110(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 409)
  def _reduce_111(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 413)
  def _reduce_112(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 418)
  def _reduce_113(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 423)
  def _reduce_114(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 428)
  def _reduce_115(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 432)
  def _reduce_116(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 437)
  def _reduce_117(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 442)
  def _reduce_118(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 446)
  def _reduce_119(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 451)
  def _reduce_120(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 455)
  def _reduce_121(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 459)
  def _reduce_122(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 123 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 466)
  def _reduce_124(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 470)
  def _reduce_125(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 475)
  def _reduce_126(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 479)
  def _reduce_127(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 484)
  def _reduce_128(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 495)
  def _reduce_134(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 499)
  def _reduce_135(val, _values)
              val[1]
        
  end
.,.,

# reduce 136 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 505)
  def _reduce_137(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 510)
  def _reduce_138(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 519)
  def _reduce_142(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 523)
  def _reduce_143(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 527)
  def _reduce_144(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 532)
  def _reduce_145(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 536)
  def _reduce_146(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 541)
  def _reduce_147(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 545)
  def _reduce_148(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 550)
  def _reduce_149(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 554)
  def _reduce_150(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 559)
  def _reduce_151(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 563)
  def _reduce_152(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
