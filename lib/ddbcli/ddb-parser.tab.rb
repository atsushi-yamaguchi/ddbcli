#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 592)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEXT
  NOT
  NUMBER
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.scan /NULL/i)
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/\[\]\{\}]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_:/]*|i)
      yield [:IDENTIFIER, tok]
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   167,   167,   245,   247,   130,   206,   272,    63,   167,   130,
    52,    52,    57,   167,   169,   169,   167,   216,   123,    56,
   273,   167,   169,   276,   166,   166,   136,   169,    52,   205,
   169,   108,   166,   167,   167,   169,   124,   166,    50,    50,
   166,   212,   125,   179,   275,   166,   126,   169,   169,    54,
   244,   180,   159,   246,   115,    73,    50,   166,   166,   238,
   213,   214,   215,   217,   164,   164,   165,   165,    55,   108,
   168,   168,   164,   195,   165,   207,   114,   164,   168,   165,
   164,   167,   165,   168,    95,   164,   168,   165,   167,    94,
   111,   168,   216,   167,   131,   169,   167,   164,   164,   165,
   165,   167,   169,   168,   168,   166,   181,   169,   167,    25,
   169,   182,   166,    90,   272,   169,   212,   166,   335,   106,
   166,   336,   169,   135,    91,   166,   270,    92,   273,   320,
   272,   307,   166,   136,   220,   213,   214,   215,   217,   219,
   221,   224,   225,   226,   273,   164,    91,   165,    69,    92,
    91,   168,   164,    92,   165,    78,    79,   164,   168,   165,
   164,    91,   165,   168,    92,   164,   168,   165,    52,    78,
    79,   168,   164,   140,   165,     3,     4,   306,   168,   307,
    18,   329,   330,   331,    49,    21,   141,    48,    19,    36,
    37,    20,    38,    39,   142,    47,    50,    32,    33,    34,
   143,    35,   145,   146,   147,   145,   146,   147,    22,    23,
    24,    25,   329,   330,   331,   110,    26,   145,   146,   147,
   344,   108,   345,   145,   146,   147,   145,   146,   147,   251,
   249,   252,   250,   253,    27,   254,   150,    28,    29,   261,
   260,    30,   198,   201,   151,   152,   136,   154,   155,   106,
   116,   106,   171,   172,   175,    63,   177,    96,   103,   102,
   101,   100,   184,   186,   189,   190,   191,    63,   193,   194,
    99,   120,    98,    63,   135,    97,   211,    96,   227,   228,
   229,   230,   231,   232,   234,   175,   236,    88,   240,   123,
   242,   136,    85,    86,   248,    85,    83,    82,   175,    81,
   169,    80,   119,   262,   264,   265,   266,   267,   268,   117,
    63,    76,   211,   189,    75,    74,   280,   150,   136,    63,
    71,   201,    70,   287,   288,   289,   290,   291,   292,    69,
   295,   296,   297,    67,   299,   300,   301,   186,   121,    66,
   305,    65,    64,   309,   310,   311,    63,   234,    61,    60,
   316,   317,   318,    63,    59,    58,    45,   324,   297,   325,
   326,    44,    43,    42,   333,   334,    41,   338,   340,   341,
   342,    40,    31,   346,   347,   348,   180,   182 ]

racc_action_check = [
   238,   131,   196,   199,   132,   169,   297,   282,   164,   104,
    26,   101,    28,   172,   238,   131,   218,   189,    97,    28,
   297,   220,   164,   234,   238,   131,   132,   172,    48,   169,
   218,   104,   164,   237,   245,   220,    98,   172,    26,   101,
   218,   189,    99,   141,   234,   220,   100,   237,   245,    27,
   196,   141,   131,   199,    90,    48,    48,   237,   245,   189,
   189,   189,   189,   189,   238,   131,   238,   131,    27,   103,
   238,   131,   164,   164,   164,   169,    85,   172,   164,   172,
   218,   248,   218,   172,    67,   220,   218,   220,   264,    67,
    83,   220,   175,   290,   106,   248,   301,   237,   245,   237,
   245,   305,   264,   237,   245,   248,   142,   290,   307,    83,
   301,   142,   264,    66,   316,   305,   175,   290,   332,   107,
   301,   332,   307,   108,    66,   305,   232,    66,   316,   314,
   232,   314,   307,   110,   175,   175,   175,   175,   175,   175,
   175,   175,   175,   175,   232,   248,   143,   248,   111,   143,
   120,   248,   264,   120,   264,    80,    80,   290,   264,   290,
   301,   140,   301,   290,   140,   305,   301,   305,    25,    54,
    54,   305,   307,   115,   307,     0,     0,   293,   307,   293,
     0,   326,   326,   326,    25,     0,   116,    25,     0,    18,
    18,     0,    18,    18,   117,    25,    25,     2,     2,     2,
   118,     2,   317,   317,   317,   324,   324,   324,     0,     0,
     0,     0,   325,   325,   325,    82,     0,   338,   338,   338,
   339,    81,   339,   270,   270,   270,   119,   119,   119,   203,
   202,   203,   202,   204,     0,   204,   122,     0,     0,   221,
   221,     0,   165,   165,   123,   124,   125,   126,   127,   130,
    91,    77,   133,   135,   136,   137,   138,   139,    76,    75,
    74,    73,   144,   149,   150,   151,   152,   153,   154,   155,
    72,    95,    71,   170,   171,    70,   173,    68,   177,   179,
   180,   181,   182,   184,   185,   186,   187,    65,   190,   191,
   193,   194,    64,    63,   201,    62,    58,    57,   211,    56,
   219,    55,    94,   226,   227,   228,   229,   230,   231,    92,
   233,    53,   235,   236,    51,    49,   240,   241,   242,   243,
    47,   247,    46,   250,   252,   254,   258,   261,   263,    43,
   265,   267,   269,    42,   272,   273,   279,   281,    96,    40,
   292,    39,    37,   298,   299,   300,    36,   302,    35,    34,
   309,   310,   311,   313,    31,    29,    24,   318,   321,   322,
   323,    23,    22,    21,   327,   331,    20,   333,   334,   335,
   336,    19,     1,   341,   342,   345,   346,   347 ]

racc_action_pointer = [
   173,   372,   195,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   181,   362,
   353,   354,   353,   348,   343,   155,    -3,    36,   -20,   289,
   nil,   354,   nil,   nil,   344,   343,   287,   332,   nil,   332,
   326,   nil,   320,   316,   nil,   nil,   283,   301,    15,   273,
   nil,   292,   nil,   272,   107,   288,   286,   258,   283,   nil,
   nil,   nil,   281,   264,   278,   274,    97,    70,   255,   nil,
   262,   231,   231,   242,   231,   246,   245,   238,   nil,   nil,
    93,   177,   202,    71,   nil,    71,   nil,   nil,   nil,   nil,
    37,   222,   281,   nil,   289,   258,   325,     0,    16,    29,
     5,    -2,   nil,    25,   -13,   nil,    66,   106,   110,   nil,
    89,   135,   nil,   nil,   nil,   160,   157,   165,   180,   202,
   123,   nil,   192,   227,   206,   202,   227,   209,   nil,   nil,
   236,    -4,   -18,   207,   nil,   225,   241,   196,   236,   235,
   134,    21,    84,   119,   241,   nil,   nil,   nil,   nil,   203,
   251,   246,   253,   208,   229,   256,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     3,   170,   nil,   nil,   nil,     0,
   214,   261,     8,   231,   nil,    88,   nil,   211,   nil,   249,
   252,   254,   254,   nil,   261,   227,   272,   241,   nil,    13,
   275,   271,   nil,   277,   247,   nil,   -20,   nil,   nil,   -19,
   nil,   220,   210,   209,   213,   nil,   nil,   nil,   nil,   nil,
   nil,   285,   nil,   nil,   nil,   nil,   nil,   nil,    11,   281,
    16,   184,   nil,   nil,   nil,   nil,   249,   285,   277,   277,
   279,   279,   113,   251,   -14,   267,   300,    28,    -5,   nil,
   296,   273,   274,   260,   nil,    29,   nil,   248,    76,   nil,
   294,   nil,   319,   nil,   250,   nil,   nil,   nil,   281,   nil,
   nil,   271,   nil,   306,    83,   301,   nil,   302,   nil,   310,
   199,   nil,   321,   318,   nil,   nil,   nil,   nil,   nil,   291,
   nil,   277,   -52,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    88,   nil,   321,   157,   nil,   nil,   nil,   -11,   320,   325,
   332,    91,   290,   nil,   nil,    96,   nil,   103,   nil,   328,
   338,   333,   nil,   294,   109,   nil,    97,   178,   344,   nil,
   nil,   336,   339,   340,   181,   180,   149,   342,   nil,   nil,
   nil,   346,    91,   354,   355,   341,   342,   nil,   193,   200,
   nil,   344,   345,   nil,   nil,   362,   346,   350,   nil ]

racc_action_default = [
  -158,  -158,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -158,  -158,
  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,
  -128,  -158,    -2,    -3,  -158,  -158,  -103,  -158,   -23,  -158,
  -158,   -29,  -158,  -158,   -58,   -59,  -158,  -158,  -158,  -158,
   -66,   -67,   -68,  -158,  -158,  -158,  -158,  -158,  -158,   349,
    -4,    -5,   -25,  -158,   -25,  -158,  -158,  -158,   -57,  -156,
  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -109,  -110,
  -158,  -158,  -158,  -158,   -21,  -158,  -104,   -22,   -24,   -27,
  -158,  -158,  -158,   -42,  -158,  -158,  -158,   -70,  -158,  -158,
  -158,  -158,   -69,  -158,  -158,  -111,  -158,  -158,  -158,  -118,
   -85,  -158,  -121,  -122,   -26,  -158,  -158,  -158,  -158,  -158,
   -31,  -157,   -72,  -158,  -158,   -85,  -158,  -158,   -65,  -107,
  -158,  -158,   -85,  -114,  -115,  -158,  -158,  -103,  -158,  -123,
  -158,  -158,  -158,  -158,  -158,   -37,   -38,   -39,   -32,  -105,
  -158,  -158,  -158,  -103,  -158,  -158,  -112,  -113,  -129,  -130,
  -131,  -132,  -133,  -134,  -158,  -158,  -144,  -145,  -146,  -158,
  -103,  -158,  -158,   -86,   -87,  -158,  -119,  -158,   -28,  -158,
  -158,  -158,  -158,   -30,   -33,  -100,  -158,   -73,   -74,  -158,
  -158,   -70,   -62,  -158,   -85,  -135,  -158,  -137,  -139,  -158,
  -141,  -158,  -158,  -158,  -158,  -150,  -152,  -154,  -108,  -116,
  -117,  -158,   -79,   -80,   -81,   -82,   -83,   -84,  -158,  -158,
  -158,  -158,   -93,   -94,   -95,   -96,  -158,  -158,  -158,  -158,
  -158,  -158,  -158,  -103,  -158,  -106,  -158,  -158,  -158,   -78,
  -158,   -72,   -85,  -103,  -136,  -158,  -140,  -158,  -158,  -147,
  -158,  -148,  -158,  -149,  -158,   -88,   -89,   -90,  -158,   -92,
   -98,  -158,   -97,  -120,  -158,  -158,   -43,  -158,   -44,   -34,
  -158,   -45,  -158,  -158,   -60,  -101,  -102,   -75,   -76,  -158,
   -71,  -105,  -103,   -64,  -138,  -142,  -143,  -151,  -153,  -155,
  -158,   -99,  -158,  -158,  -126,   -40,   -41,  -158,  -158,  -158,
  -158,  -158,  -100,   -63,   -91,  -158,  -124,  -158,   -46,   -35,
  -158,  -158,   -77,  -103,  -158,  -127,  -158,  -158,  -158,   -61,
  -125,   -36,  -158,  -158,  -158,  -158,  -158,   -50,   -47,   -52,
   -53,  -158,   -48,  -158,  -158,  -158,  -158,   -49,  -158,  -158,
   -55,  -158,  -158,   -51,   -54,  -158,  -158,  -158,   -56 ]

racc_goto_table = [
    62,   144,   158,   137,   185,   149,   233,   188,   122,    11,
   269,    89,    12,    68,   200,   134,   173,   293,   153,   104,
    77,    46,    53,   222,    84,   170,    87,     1,   109,   328,
   332,   323,   308,   337,   118,   197,   339,   239,    17,    16,
    15,   187,    14,   210,    72,   237,   107,    13,    10,   132,
   128,   129,     9,   255,   218,   257,   259,   223,   314,     8,
     7,   156,   157,   133,     6,   148,   235,   138,   263,     5,
   196,   199,     2,   202,   203,   204,   nil,   nil,   209,   nil,
   nil,   139,   nil,   nil,   nil,   178,   nil,   243,   183,   256,
   nil,   258,   112,   277,   321,   113,   285,   127,   nil,   nil,
   nil,   176,   241,   nil,   nil,   nil,   nil,   nil,   278,   279,
   nil,   nil,   nil,   nil,   nil,   nil,   284,   192,   nil,   286,
   nil,   nil,   nil,   313,   281,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   208,   282,   302,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   298,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   304,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   312,   nil,   nil,   nil,   nil,   nil,   315,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   274,   nil,   322,
   nil,   nil,   nil,   nil,   nil,   nil,   327,   283,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   343,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   303,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   319 ]

racc_goto_check = [
    16,    20,    39,    33,    31,    30,    32,    37,    29,     9,
    21,    18,    10,    27,    61,    52,    41,    55,    33,    48,
    47,    28,    28,    40,    17,    33,    17,     1,    34,    24,
    24,    25,    23,    22,    19,    39,    26,    40,    15,    14,
    13,    36,    12,    39,    28,    38,    47,    11,     8,    48,
    34,    34,     7,    42,    43,    44,    45,    46,    55,     6,
     5,    49,    50,    51,     4,    18,    41,    53,    54,     3,
    59,    60,     2,    62,    63,    64,   nil,   nil,    52,   nil,
   nil,    27,   nil,   nil,   nil,    18,   nil,    33,    18,    39,
   nil,    39,     9,    37,    21,    10,    61,    28,   nil,   nil,
   nil,    16,    29,   nil,   nil,   nil,   nil,   nil,    39,    39,
   nil,   nil,   nil,   nil,   nil,   nil,    39,    16,   nil,    39,
   nil,   nil,   nil,    32,    30,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,    33,    31,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,    39,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,    20,
   nil,   nil,   nil,   nil,   nil,   nil,    20,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    27,    72,    69,    64,    60,    59,    52,    48,     9,
    12,    47,    42,    40,    39,    38,   -36,   -38,   -55,   -60,
  -118,  -222,  -299,  -265,  -296,  -287,  -298,   -30,    -4,   -89,
  -117,  -145,  -179,  -107,   -53,   nil,  -109,  -143,  -144,  -129,
  -152,  -120,  -158,  -121,  -164,  -165,  -118,   -34,   -58,   -69,
   -69,   -45,   -93,   -44,  -159,  -247,   nil,   nil,   nil,   -94,
   -94,  -151,   -96,   -95,   -94 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    93,   271,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    51,   nil,   nil,   nil,   294,
   nil,   nil,   174,   nil,   161,   nil,   nil,   nil,   nil,   105,
   nil,   nil,   nil,   nil,   nil,   nil,   160,   162,   163,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 77, :_reduce_1,
  2, 77, :_reduce_2,
  2, 77, :_reduce_3,
  3, 77, :_reduce_4,
  3, 77, :_reduce_5,
  1, 77, :_reduce_6,
  1, 77, :_reduce_7,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  4, 79, :_reduce_21,
  4, 79, :_reduce_22,
  2, 79, :_reduce_23,
  4, 79, :_reduce_24,
  0, 93, :_reduce_none,
  2, 93, :_reduce_26,
  4, 80, :_reduce_27,
  7, 80, :_reduce_28,
  2, 81, :_reduce_29,
  7, 82, :_reduce_30,
  5, 82, :_reduce_31,
  6, 82, :_reduce_32,
  3, 95, :_reduce_33,
  5, 95, :_reduce_34,
  7, 95, :_reduce_35,
  9, 95, :_reduce_36,
  1, 96, :_reduce_37,
  1, 96, :_reduce_38,
  1, 96, :_reduce_39,
  7, 94, :_reduce_40,
  7, 94, :_reduce_41,
  1, 94, :_reduce_none,
  6, 98, :_reduce_43,
  6, 98, :_reduce_44,
  1, 97, :_reduce_45,
  3, 97, :_reduce_46,
  7, 99, :_reduce_47,
  7, 99, :_reduce_48,
  8, 99, :_reduce_49,
  2, 101, :_reduce_50,
  5, 101, :_reduce_51,
  1, 100, :_reduce_52,
  1, 100, :_reduce_53,
  4, 100, :_reduce_54,
  1, 102, :_reduce_55,
  3, 102, :_reduce_56,
  3, 83, :_reduce_57,
  2, 84, :_reduce_58,
  2, 84, :_reduce_59,
  9, 85, :_reduce_60,
  12, 85, :_reduce_61,
  7, 86, :_reduce_62,
  10, 86, :_reduce_63,
  9, 86, :_reduce_64,
  5, 87, :_reduce_65,
  1, 104, :_reduce_66,
  1, 104, :_reduce_67,
  1, 111, :_reduce_68,
  3, 111, :_reduce_69,
  0, 105, :_reduce_none,
  5, 105, :_reduce_71,
  0, 106, :_reduce_none,
  2, 106, :_reduce_73,
  1, 112, :_reduce_74,
  3, 112, :_reduce_75,
  3, 113, :_reduce_76,
  5, 113, :_reduce_77,
  1, 114, :_reduce_none,
  1, 116, :_reduce_79,
  1, 116, :_reduce_80,
  1, 116, :_reduce_81,
  1, 116, :_reduce_82,
  1, 116, :_reduce_83,
  1, 116, :_reduce_none,
  0, 109, :_reduce_none,
  2, 109, :_reduce_86,
  1, 117, :_reduce_87,
  3, 117, :_reduce_88,
  3, 118, :_reduce_89,
  3, 118, :_reduce_90,
  5, 118, :_reduce_91,
  3, 118, :_reduce_92,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_95,
  1, 122, :_reduce_none,
  2, 122, :_reduce_97,
  1, 121, :_reduce_98,
  2, 121, :_reduce_99,
  0, 108, :_reduce_none,
  2, 108, :_reduce_101,
  2, 108, :_reduce_102,
  0, 92, :_reduce_none,
  2, 92, :_reduce_104,
  0, 107, :_reduce_none,
  2, 107, :_reduce_106,
  5, 88, :_reduce_107,
  7, 88, :_reduce_108,
  1, 123, :_reduce_109,
  1, 123, :_reduce_110,
  1, 124, :_reduce_111,
  3, 124, :_reduce_112,
  3, 125, :_reduce_113,
  2, 110, :_reduce_114,
  1, 127, :_reduce_115,
  3, 127, :_reduce_116,
  3, 128, :_reduce_117,
  4, 89, :_reduce_118,
  6, 89, :_reduce_119,
  8, 90, :_reduce_120,
  4, 90, :_reduce_121,
  4, 90, :_reduce_122,
  1, 129, :_reduce_none,
  3, 130, :_reduce_124,
  5, 130, :_reduce_125,
  1, 131, :_reduce_126,
  3, 131, :_reduce_127,
  1, 91, :_reduce_128,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  2, 133, :_reduce_none,
  3, 133, :_reduce_136,
  1, 135, :_reduce_137,
  3, 135, :_reduce_138,
  2, 134, :_reduce_139,
  3, 134, :_reduce_140,
  1, 136, :_reduce_none,
  3, 136, :_reduce_142,
  3, 137, :_reduce_143,
  1, 132, :_reduce_none,
  1, 132, :_reduce_none,
  1, 132, :_reduce_none,
  3, 120, :_reduce_147,
  3, 120, :_reduce_148,
  3, 120, :_reduce_149,
  1, 138, :_reduce_150,
  3, 138, :_reduce_151,
  1, 139, :_reduce_152,
  3, 139, :_reduce_153,
  1, 140, :_reduce_154,
  3, 140, :_reduce_155,
  1, 103, :_reduce_156,
  3, 103, :_reduce_157 ]

racc_reduce_n = 158

racc_shift_n = 349

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  "(" => 19,
  ")" => 20,
  :HASH => 21,
  "," => 22,
  :RANGE => 23,
  :STRING => 24,
  :NUMBER => 25,
  :BINARY => 26,
  :READ => 27,
  :EQ => 28,
  :NUMBER_VALUE => 29,
  :WRITE => 30,
  :GLOBAL => 31,
  :ALL => 32,
  :KEYS_ONLY => 33,
  :INCLUDE => 34,
  :DROP => 35,
  :DESCRIBE => 36,
  :DESC => 37,
  :SELECT => 38,
  :FROM => 39,
  :COUNT => 40,
  "*" => 41,
  "/" => 42,
  :GET => 43,
  :WHERE => 44,
  :AND => 45,
  :BETWEEN => 46,
  :LE => 47,
  :LT => 48,
  :GE => 49,
  :BEGINS_WITH => 50,
  :IN => 51,
  :IS => 52,
  :NE => 53,
  :CONTAINS => 54,
  :NOT => 55,
  :NULL => 56,
  :ORDER => 57,
  :ASC => 58,
  :LIMIT => 59,
  :HAVING => 60,
  :UPDATE => 61,
  :SET => 62,
  :ADD => 63,
  :DELETE => 64,
  :INSERT => 65,
  :INTO => 66,
  :VALUES => 67,
  :NEXT => 68,
  "[" => 69,
  "]" => 70,
  "{" => 71,
  "}" => 72,
  :identifier => 73,
  ":" => 74,
  :BINARY_VALUE => 75 }

racc_nt_base = 76

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "\"(\"",
  "\")\"",
  "HASH",
  "\",\"",
  "RANGE",
  "STRING",
  "NUMBER",
  "BINARY",
  "READ",
  "EQ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "KEYS_ONLY",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "identifier",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "create_definition",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "attr_to_update",
  "value_or_null",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "list",
  "map",
  "list_items",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_28(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => val[5], :capacity => val[6])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 81)
  def _reduce_29(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 86)
  def _reduce_30(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 90)
  def _reduce_31(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 94)
  def _reduce_32(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 99)
  def _reduce_33(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 103)
  def _reduce_34(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 107)
  def _reduce_35(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 111)
  def _reduce_36(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 116)
  def _reduce_37(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 120)
  def _reduce_38(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 124)
  def _reduce_39(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 129)
  def _reduce_40(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 133)
  def _reduce_41(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 139)
  def _reduce_43(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 143)
  def _reduce_44(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 148)
  def _reduce_45(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 152)
  def _reduce_46(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 157)
  def _reduce_47(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 161)
  def _reduce_48(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 165)
  def _reduce_49(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 170)
  def _reduce_50(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 174)
  def _reduce_51(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 182)
  def _reduce_52(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 186)
  def _reduce_53(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 190)
  def _reduce_54(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 195)
  def _reduce_55(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 199)
  def _reduce_56(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_57(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 209)
  def _reduce_58(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 213)
  def _reduce_59(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 218)
  def _reduce_60(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 222)
  def _reduce_61(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 227)
  def _reduce_62(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 231)
  def _reduce_63(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 235)
  def _reduce_64(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 240)
  def _reduce_65(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 245)
  def _reduce_66(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 249)
  def _reduce_67(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 254)
  def _reduce_68(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 258)
  def _reduce_69(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 264)
  def _reduce_71(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 270)
  def _reduce_73(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 275)
  def _reduce_74(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 279)
  def _reduce_75(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 284)
  def _reduce_76(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 288)
  def _reduce_77(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 78 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 295)
  def _reduce_79(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 299)
  def _reduce_80(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 303)
  def _reduce_81(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 307)
  def _reduce_82(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 311)
  def _reduce_83(val, _values)
                          :GT
                    
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 318)
  def _reduce_86(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 323)
  def _reduce_87(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 327)
  def _reduce_88(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 332)
  def _reduce_89(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 336)
  def _reduce_90(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 340)
  def _reduce_91(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 344)
  def _reduce_92(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 350)
  def _reduce_95(val, _values)
                      :NE
                
  end
.,.,

# reduce 96 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 356)
  def _reduce_97(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 360)
  def _reduce_98(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 364)
  def _reduce_99(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 370)
  def _reduce_101(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 374)
  def _reduce_102(val, _values)
                       false
                 
  end
.,.,

# reduce 103 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 380)
  def _reduce_104(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 386)
  def _reduce_106(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 391)
  def _reduce_107(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 395)
  def _reduce_108(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 400)
  def _reduce_109(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 404)
  def _reduce_110(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 409)
  def _reduce_111(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 413)
  def _reduce_112(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 418)
  def _reduce_113(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 423)
  def _reduce_114(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 428)
  def _reduce_115(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 432)
  def _reduce_116(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 437)
  def _reduce_117(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 442)
  def _reduce_118(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 446)
  def _reduce_119(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 451)
  def _reduce_120(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 455)
  def _reduce_121(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 459)
  def _reduce_122(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 123 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 466)
  def _reduce_124(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 470)
  def _reduce_125(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 475)
  def _reduce_126(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 479)
  def _reduce_127(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 484)
  def _reduce_128(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 497)
  def _reduce_136(val, _values)
               val[1]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 502)
  def _reduce_137(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 506)
  def _reduce_138(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 511)
  def _reduce_139(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 515)
  def _reduce_140(val, _values)
              val[1]
        
  end
.,.,

# reduce 141 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 521)
  def _reduce_142(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 526)
  def _reduce_143(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 535)
  def _reduce_147(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 539)
  def _reduce_148(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 543)
  def _reduce_149(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 548)
  def _reduce_150(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 552)
  def _reduce_151(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 557)
  def _reduce_152(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 561)
  def _reduce_153(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 566)
  def _reduce_154(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 570)
  def _reduce_155(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 575)
  def _reduce_156(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 579)
  def _reduce_157(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
