#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 602)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEXT
  NOT
  NUMBER
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.scan /NULL/i)
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/\[\]\{\}:]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_]*|i)
      if ['true', 'false'].include?(tok)
        yield [:BOOL, 'true' == tok]
      else
        yield [:IDENTIFIER, tok]
      end
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   169,   203,   250,   209,   169,   112,   248,   204,   322,   131,
    53,   169,    53,    53,    58,   171,   274,   127,   169,   171,
   276,    57,   169,    25,   168,   181,   171,   208,   168,   169,
   137,    53,   182,   171,   277,   168,   169,   171,    51,    74,
    51,    51,   168,    55,   171,   131,   168,    50,   169,   125,
    49,   171,   249,   168,   247,   160,    79,    80,    48,    51,
   168,   200,    56,   171,   165,   166,   109,   167,   165,   166,
   170,   167,   168,   210,   170,   165,   166,   197,   167,   109,
   169,   170,   165,   166,   276,   167,   165,   166,   170,   167,
   169,   124,   170,   165,   166,   171,   167,    91,   277,   170,
   165,   166,   169,   167,   168,   171,   170,   280,    92,   169,
   132,    93,   165,   166,   168,   167,   169,   171,   170,   219,
   107,   276,   340,   146,   171,   341,   168,   169,   279,   147,
   148,   171,   146,   168,   169,   277,   136,   183,   147,   148,
   168,   184,   171,   215,   165,   166,   146,   167,   137,   171,
   170,   168,   147,   148,   165,   166,    92,   167,   168,    93,
   170,   241,   216,   217,   218,   220,   165,   166,    92,   167,
    70,    93,   170,   165,   166,   141,   167,     3,     4,   170,
   165,   166,    18,   167,   219,    92,   170,    21,    93,   146,
    19,   165,   166,    20,   167,   147,   148,   170,   165,   166,
   146,   167,   142,   203,   170,   143,   147,   148,   215,   204,
    22,    23,    24,    25,    96,    41,   144,   255,    26,   256,
    95,    42,   253,   325,   254,   312,   223,   216,   217,   218,
   220,   222,   224,   227,   228,   229,    27,   265,   264,    28,
    29,    36,    37,    30,    38,    39,    32,    33,    34,   257,
    35,   258,   334,   335,   336,   334,   335,   336,   311,   349,
   312,   350,    79,    80,   122,   121,   151,   152,   153,   137,
   155,   156,   107,   120,   118,   173,   174,   177,    64,   179,
    97,   117,   116,   115,   111,   186,   188,   191,   192,   193,
    64,   195,   196,   109,   107,   104,    64,   136,   103,   214,
   102,   230,   231,   232,   233,   234,   235,   237,   177,   239,
   101,   243,   124,   245,   137,   100,    99,   251,   252,    98,
    97,    89,   177,    86,   171,    87,    86,   266,   268,   269,
   270,   271,   272,    84,    64,    83,   214,   191,    82,    81,
   284,   151,   137,    64,    77,    76,    75,    72,   292,   293,
   294,   295,   296,   297,    71,   300,   301,   302,    70,   304,
   305,   306,   188,    64,    68,   310,    67,    66,   314,   315,
   316,    65,   237,    64,    62,   321,   126,   323,    64,    61,
    60,    59,   329,   302,   330,   331,    46,    45,    44,   338,
   339,    43,   343,   345,   346,   347,    40,    31,   351,   352,
   353,   182,   184 ]

racc_action_check = [
   312,   167,   201,   171,   132,    84,   198,   167,   315,   133,
   102,   166,    49,    26,    28,   312,   235,   101,   306,   132,
   235,    28,   174,    84,   312,   142,   166,   171,   132,   310,
   133,    25,   142,   306,   235,   166,   221,   174,   102,    49,
    49,    26,   306,    27,   310,   105,   174,    25,   223,    99,
    25,   221,   201,   310,   198,   132,    55,    55,    25,    25,
   221,   167,    27,   223,   312,   312,   105,   312,   132,   132,
   312,   132,   223,   171,   132,   166,   166,   166,   166,   104,
   295,   166,   306,   306,   321,   306,   174,   174,   306,   174,
   241,    98,   174,   310,   310,   295,   310,    67,   321,   310,
   221,   221,   248,   221,   295,   241,   221,   237,    67,   251,
   107,    67,   223,   223,   241,   223,   252,   248,   223,   191,
   108,   302,   337,   343,   251,   337,   248,   268,   237,   343,
   343,   252,   322,   251,   240,   302,   109,   143,   322,   322,
   252,   143,   268,   191,   295,   295,   329,   295,   111,   240,
   295,   268,   329,   329,   241,   241,   141,   241,   240,   141,
   241,   191,   191,   191,   191,   191,   248,   248,   144,   248,
   112,   144,   248,   251,   251,   116,   251,     0,     0,   251,
   252,   252,     0,   252,   177,   121,   252,     0,   121,   120,
     0,   268,   268,     0,   268,   120,   120,   268,   240,   240,
   274,   240,   117,   250,   240,   118,   274,   274,   177,   250,
     0,     0,     0,     0,    68,    20,   119,   206,     0,   206,
    68,    20,   205,   319,   205,   319,   177,   177,   177,   177,
   177,   177,   177,   177,   177,   177,     0,   224,   224,     0,
     0,    18,    18,     0,    18,    18,     2,     2,     2,   207,
     2,   207,   331,   331,   331,   330,   330,   330,   298,   344,
   298,   344,    81,    81,    97,    96,   123,   124,   125,   126,
   127,   128,   131,    95,    93,   134,   136,   137,   138,   139,
   140,    92,    91,    86,    83,   145,   150,   151,   152,   153,
   154,   155,   156,    82,    78,    77,   172,   173,    76,   175,
    75,   179,   181,   182,   183,   184,   186,   187,   188,   189,
    74,   192,   193,   195,   196,    73,    72,   203,   204,    71,
    69,    66,   214,    65,   222,    64,    63,   229,   230,   231,
   232,   233,   234,    59,   236,    58,   238,   239,    57,    56,
   243,   244,   245,   246,    54,    52,    50,    48,   254,   256,
   258,   262,   265,   267,    47,   269,   271,   273,    44,   276,
   277,   283,   285,   286,    43,   297,    40,    39,   303,   304,
   305,    37,   307,    36,    35,   314,   100,   316,   318,    34,
    31,    29,   323,   326,   327,   328,    24,    23,    22,   332,
   336,    21,   338,   339,   340,   341,    19,     1,   346,   347,
   350,   351,   352 ]

racc_action_pointer = [
   175,   397,   244,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   233,   387,
   202,   382,   379,   374,   373,    18,     0,    30,   -18,   315,
   nil,   380,   nil,   nil,   374,   369,   314,   361,   nil,   358,
   353,   nil,   nil,   351,   345,   nil,   nil,   315,   327,    -1,
   304,   nil,   322,   nil,   305,    -6,   326,   325,   296,   320,
   nil,   nil,   nil,   312,   296,   309,   308,    81,   200,   297,
   nil,   306,   275,   276,   290,   271,   285,   282,   281,   nil,
   nil,   200,   249,   271,   -15,   nil,   278,   nil,   nil,   nil,
   nil,   265,   253,   246,   nil,   260,   252,   251,    73,    28,
   363,   -24,    -3,   nil,    35,    22,   nil,    82,   107,   123,
   nil,   104,   157,   nil,   nil,   nil,   162,   173,   176,   195,
   170,   158,   nil,   222,   250,   229,   225,   249,   232,   nil,
   nil,   259,    -1,   -14,   230,   nil,   248,   264,   219,   258,
   257,   129,     2,   114,   141,   263,   nil,   nil,   nil,   nil,
   226,   274,   268,   276,   231,   252,   279,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     6,   -12,   nil,   nil,
   nil,    -2,   237,   284,    17,   254,   nil,   180,   nil,   234,
   nil,   272,   275,   277,   277,   nil,   283,   250,   295,   264,
   nil,   115,   298,   294,   nil,   300,   270,   nil,   -17,   nil,
   nil,   -21,   nil,   243,   244,   201,   196,   228,   nil,   nil,
   nil,   nil,   nil,   nil,   309,   nil,   nil,   nil,   nil,   nil,
   nil,    31,   304,    43,   182,   nil,   nil,   nil,   nil,   273,
   308,   301,   301,   303,   303,     3,   275,    70,   291,   324,
   129,    85,   nil,   319,   297,   298,   284,   nil,    97,   nil,
   190,   104,   111,   nil,   319,   nil,   344,   nil,   275,   nil,
   nil,   nil,   306,   nil,   nil,   296,   nil,   330,   122,   326,
   nil,   327,   nil,   334,   181,   nil,   346,   343,   nil,   nil,
   nil,   nil,   nil,   316,   nil,   302,   304,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    75,   nil,   345,   237,   nil,
   nil,   nil,   104,   344,   349,   357,    13,   315,   nil,   nil,
    24,   nil,    -5,   nil,   352,    -5,   357,   nil,   319,   202,
   nil,    67,   113,   369,   nil,   nil,   360,   363,   364,   127,
   223,   220,   366,   nil,   nil,   nil,   370,    95,   379,   380,
   366,   367,   nil,   104,   238,   nil,   369,   370,   nil,   nil,
   387,   371,   375,   nil ]

racc_action_default = [
  -161,  -161,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -161,  -161,
  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,
  -129,  -161,    -2,    -3,  -161,  -161,  -104,  -161,   -23,  -161,
  -161,   -29,   -30,  -161,  -161,   -59,   -60,  -161,  -161,  -161,
  -161,   -67,   -68,   -69,  -161,  -161,  -161,  -161,  -161,  -161,
   354,    -4,    -5,   -25,  -161,   -25,  -161,  -161,  -161,   -58,
  -159,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -110,
  -111,  -161,  -161,  -161,  -161,   -21,  -161,  -105,   -22,   -24,
   -27,  -161,  -161,  -161,   -43,  -161,  -161,  -161,   -71,  -161,
  -161,  -161,  -161,   -70,  -161,  -161,  -112,  -161,  -161,  -161,
  -119,   -86,  -161,  -122,  -123,   -26,  -161,  -161,  -161,  -161,
  -161,   -32,  -160,   -73,  -161,  -161,   -86,  -161,  -161,   -66,
  -108,  -161,  -161,   -86,  -115,  -116,  -161,  -161,  -104,  -161,
  -124,  -161,  -161,  -161,  -161,  -161,   -38,   -39,   -40,   -33,
  -106,  -161,  -161,  -161,  -104,  -161,  -161,  -113,  -114,  -130,
  -131,  -132,  -133,  -134,  -135,  -136,  -161,  -161,  -147,  -148,
  -149,  -161,  -104,  -161,  -161,   -87,   -88,  -161,  -120,  -161,
   -28,  -161,  -161,  -161,  -161,   -31,   -34,  -101,  -161,   -74,
   -75,  -161,  -161,   -71,   -63,  -161,   -86,  -137,  -161,  -139,
  -141,  -161,  -143,  -161,  -161,  -161,  -161,  -161,  -153,  -155,
  -157,  -109,  -117,  -118,  -161,   -80,   -81,   -82,   -83,   -84,
   -85,  -161,  -161,  -161,  -161,   -94,   -95,   -96,   -97,  -161,
  -161,  -161,  -161,  -161,  -161,  -161,  -104,  -161,  -107,  -161,
  -161,  -161,   -79,  -161,   -73,   -86,  -104,  -138,  -161,  -142,
  -161,  -161,  -161,  -150,  -161,  -151,  -161,  -152,  -161,   -89,
   -90,   -91,  -161,   -93,   -99,  -161,   -98,  -121,  -161,  -161,
   -44,  -161,   -45,   -35,  -161,   -46,  -161,  -161,   -61,  -102,
  -103,   -76,   -77,  -161,   -72,  -106,  -104,   -65,  -140,  -144,
  -145,  -146,  -154,  -156,  -158,  -161,  -100,  -161,  -161,  -127,
   -41,   -42,  -161,  -161,  -161,  -161,  -161,  -101,   -64,   -92,
  -161,  -125,  -161,   -47,   -36,  -161,  -161,   -78,  -104,  -161,
  -128,  -161,  -161,  -161,   -62,  -126,   -37,  -161,  -161,  -161,
  -161,  -161,   -51,   -48,   -53,   -54,  -161,   -49,  -161,  -161,
  -161,  -161,   -50,  -161,  -161,   -56,  -161,  -161,   -52,   -55,
  -161,  -161,  -161,   -57 ]

racc_goto_table = [
    63,   159,   145,   187,   150,   123,   138,   236,   190,   273,
    11,    90,    69,    12,   135,   202,    47,    54,   175,   298,
   105,   154,    78,   110,   225,    85,     1,    88,   172,   333,
   337,   328,   313,   342,   119,   199,   344,    17,   242,    16,
    73,    15,   189,   213,    14,   129,   130,   240,   108,    13,
   133,    10,     9,   259,   221,   261,   263,   226,     8,     7,
   157,   319,   158,   134,     6,   149,   139,   267,     5,   238,
   198,   201,     2,   205,   206,   207,   nil,   nil,   212,   nil,
   140,   nil,   nil,   nil,   nil,   180,   nil,   nil,   185,   nil,
   260,   246,   262,   128,   113,   326,   281,   114,   289,   nil,
   244,   nil,   178,   nil,   nil,   nil,   nil,   nil,   nil,   282,
   283,   nil,   nil,   nil,   nil,   nil,   nil,   288,   194,   nil,
   290,   291,   nil,   nil,   nil,   285,   nil,   318,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   211,   nil,   307,   nil,
   286,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   303,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   309,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   317,   nil,   nil,   nil,   nil,
   nil,   320,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   278,   nil,   nil,   nil,   327,   nil,   nil,   nil,   nil,   nil,
   287,   332,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   348,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   308,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   324 ]

racc_goto_check = [
    16,    39,    20,    31,    30,    29,    33,    32,    37,    21,
     9,    18,    27,    10,    52,    61,    28,    28,    41,    55,
    48,    33,    47,    34,    40,    17,     1,    17,    33,    24,
    24,    25,    23,    22,    19,    39,    26,    15,    40,    14,
    28,    13,    36,    39,    12,    34,    34,    38,    47,    11,
    48,     8,     7,    42,    43,    44,    45,    46,     6,     5,
    49,    55,    50,    51,     4,    18,    53,    54,     3,    41,
    59,    60,     2,    62,    63,    64,   nil,   nil,    52,   nil,
    27,   nil,   nil,   nil,   nil,    18,   nil,   nil,    18,   nil,
    39,    33,    39,    28,     9,    21,    37,    10,    61,   nil,
    29,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,    39,
    39,   nil,   nil,   nil,   nil,   nil,   nil,    39,    16,   nil,
    39,    39,   nil,   nil,   nil,    30,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,    31,   nil,
    33,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    20,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,
   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,
    16,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    20,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    26,    72,    68,    64,    59,    58,    52,    51,    10,
    13,    49,    44,    41,    39,    37,   -36,   -38,   -56,   -61,
  -118,  -226,  -304,  -270,  -301,  -292,  -303,   -32,    -9,   -93,
  -119,  -147,  -180,  -105,   -59,   nil,  -109,  -143,  -144,  -131,
  -153,  -119,  -161,  -123,  -167,  -168,  -120,   -33,   -58,   -71,
   -70,   -46,   -95,   -46,  -163,  -249,   nil,   nil,   nil,   -96,
   -96,  -152,   -98,   -97,   -96 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    94,   275,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    52,   nil,   nil,   nil,   299,
   nil,   nil,   176,   nil,   162,   nil,   nil,   nil,   nil,   106,
   nil,   nil,   nil,   nil,   nil,   nil,   161,   163,   164,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 77, :_reduce_1,
  2, 77, :_reduce_2,
  2, 77, :_reduce_3,
  3, 77, :_reduce_4,
  3, 77, :_reduce_5,
  1, 77, :_reduce_6,
  1, 77, :_reduce_7,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  4, 79, :_reduce_21,
  4, 79, :_reduce_22,
  2, 79, :_reduce_23,
  4, 79, :_reduce_24,
  0, 93, :_reduce_none,
  2, 93, :_reduce_26,
  4, 80, :_reduce_27,
  7, 80, :_reduce_28,
  2, 81, :_reduce_29,
  2, 81, :_reduce_30,
  7, 82, :_reduce_31,
  5, 82, :_reduce_32,
  6, 82, :_reduce_33,
  3, 95, :_reduce_34,
  5, 95, :_reduce_35,
  7, 95, :_reduce_36,
  9, 95, :_reduce_37,
  1, 96, :_reduce_38,
  1, 96, :_reduce_39,
  1, 96, :_reduce_40,
  7, 94, :_reduce_41,
  7, 94, :_reduce_42,
  1, 94, :_reduce_none,
  6, 98, :_reduce_44,
  6, 98, :_reduce_45,
  1, 97, :_reduce_46,
  3, 97, :_reduce_47,
  7, 99, :_reduce_48,
  7, 99, :_reduce_49,
  8, 99, :_reduce_50,
  2, 101, :_reduce_51,
  5, 101, :_reduce_52,
  1, 100, :_reduce_53,
  1, 100, :_reduce_54,
  4, 100, :_reduce_55,
  1, 102, :_reduce_56,
  3, 102, :_reduce_57,
  3, 83, :_reduce_58,
  2, 84, :_reduce_59,
  2, 84, :_reduce_60,
  9, 85, :_reduce_61,
  12, 85, :_reduce_62,
  7, 86, :_reduce_63,
  10, 86, :_reduce_64,
  9, 86, :_reduce_65,
  5, 87, :_reduce_66,
  1, 104, :_reduce_67,
  1, 104, :_reduce_68,
  1, 111, :_reduce_69,
  3, 111, :_reduce_70,
  0, 105, :_reduce_none,
  5, 105, :_reduce_72,
  0, 106, :_reduce_none,
  2, 106, :_reduce_74,
  1, 112, :_reduce_75,
  3, 112, :_reduce_76,
  3, 113, :_reduce_77,
  5, 113, :_reduce_78,
  1, 114, :_reduce_none,
  1, 116, :_reduce_80,
  1, 116, :_reduce_81,
  1, 116, :_reduce_82,
  1, 116, :_reduce_83,
  1, 116, :_reduce_84,
  1, 116, :_reduce_none,
  0, 109, :_reduce_none,
  2, 109, :_reduce_87,
  1, 117, :_reduce_88,
  3, 117, :_reduce_89,
  3, 118, :_reduce_90,
  3, 118, :_reduce_91,
  5, 118, :_reduce_92,
  3, 118, :_reduce_93,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_96,
  1, 122, :_reduce_none,
  2, 122, :_reduce_98,
  1, 121, :_reduce_99,
  2, 121, :_reduce_100,
  0, 108, :_reduce_none,
  2, 108, :_reduce_102,
  2, 108, :_reduce_103,
  0, 92, :_reduce_none,
  2, 92, :_reduce_105,
  0, 107, :_reduce_none,
  2, 107, :_reduce_107,
  5, 88, :_reduce_108,
  7, 88, :_reduce_109,
  1, 123, :_reduce_110,
  1, 123, :_reduce_111,
  1, 124, :_reduce_112,
  3, 124, :_reduce_113,
  3, 125, :_reduce_114,
  2, 110, :_reduce_115,
  1, 127, :_reduce_116,
  3, 127, :_reduce_117,
  3, 128, :_reduce_118,
  4, 89, :_reduce_119,
  6, 89, :_reduce_120,
  8, 90, :_reduce_121,
  4, 90, :_reduce_122,
  4, 90, :_reduce_123,
  1, 129, :_reduce_none,
  3, 130, :_reduce_125,
  5, 130, :_reduce_126,
  1, 131, :_reduce_127,
  3, 131, :_reduce_128,
  1, 91, :_reduce_129,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  2, 133, :_reduce_none,
  3, 133, :_reduce_138,
  1, 135, :_reduce_139,
  3, 135, :_reduce_140,
  2, 134, :_reduce_141,
  3, 134, :_reduce_142,
  1, 136, :_reduce_none,
  3, 136, :_reduce_144,
  3, 137, :_reduce_145,
  3, 137, :_reduce_146,
  1, 132, :_reduce_none,
  1, 132, :_reduce_none,
  1, 132, :_reduce_none,
  3, 120, :_reduce_150,
  3, 120, :_reduce_151,
  3, 120, :_reduce_152,
  1, 138, :_reduce_153,
  3, 138, :_reduce_154,
  1, 139, :_reduce_155,
  3, 139, :_reduce_156,
  1, 140, :_reduce_157,
  3, 140, :_reduce_158,
  1, 103, :_reduce_159,
  3, 103, :_reduce_160 ]

racc_reduce_n = 161

racc_shift_n = 354

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  :STRING => 19,
  "(" => 20,
  ")" => 21,
  :HASH => 22,
  "," => 23,
  :RANGE => 24,
  :NUMBER => 25,
  :BINARY => 26,
  :READ => 27,
  :EQ => 28,
  :NUMBER_VALUE => 29,
  :WRITE => 30,
  :GLOBAL => 31,
  :ALL => 32,
  :KEYS_ONLY => 33,
  :INCLUDE => 34,
  :DROP => 35,
  :DESCRIBE => 36,
  :DESC => 37,
  :SELECT => 38,
  :FROM => 39,
  :COUNT => 40,
  "*" => 41,
  "/" => 42,
  :GET => 43,
  :WHERE => 44,
  :AND => 45,
  :BETWEEN => 46,
  :LE => 47,
  :LT => 48,
  :GE => 49,
  :BEGINS_WITH => 50,
  :IN => 51,
  :IS => 52,
  :NE => 53,
  :CONTAINS => 54,
  :NOT => 55,
  :NULL => 56,
  :ORDER => 57,
  :ASC => 58,
  :LIMIT => 59,
  :HAVING => 60,
  :UPDATE => 61,
  :SET => 62,
  :ADD => 63,
  :DELETE => 64,
  :INSERT => 65,
  :INTO => 66,
  :VALUES => 67,
  :NEXT => 68,
  :BOOL => 69,
  "[" => 70,
  "]" => 71,
  "{" => 72,
  "}" => 73,
  ":" => 74,
  :BINARY_VALUE => 75 }

racc_nt_base = 76

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "STRING",
  "\"(\"",
  "\")\"",
  "HASH",
  "\",\"",
  "RANGE",
  "NUMBER",
  "BINARY",
  "READ",
  "EQ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "KEYS_ONLY",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "BOOL",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "create_definition",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "attr_to_update",
  "value_or_null",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "list",
  "map",
  "list_items",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_28(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => val[5], :capacity => val[6])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 81)
  def _reduce_29(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 86)
  def _reduce_30(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 91)
  def _reduce_31(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 95)
  def _reduce_32(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 99)
  def _reduce_33(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 104)
  def _reduce_34(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 108)
  def _reduce_35(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 112)
  def _reduce_36(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 116)
  def _reduce_37(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 121)
  def _reduce_38(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 125)
  def _reduce_39(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 129)
  def _reduce_40(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 134)
  def _reduce_41(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 138)
  def _reduce_42(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 144)
  def _reduce_44(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 148)
  def _reduce_45(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 153)
  def _reduce_46(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 157)
  def _reduce_47(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 162)
  def _reduce_48(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 166)
  def _reduce_49(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 170)
  def _reduce_50(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 175)
  def _reduce_51(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 179)
  def _reduce_52(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 187)
  def _reduce_53(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 191)
  def _reduce_54(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 195)
  def _reduce_55(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 200)
  def _reduce_56(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_57(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 209)
  def _reduce_58(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 214)
  def _reduce_59(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 218)
  def _reduce_60(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 223)
  def _reduce_61(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 227)
  def _reduce_62(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 232)
  def _reduce_63(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 236)
  def _reduce_64(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 240)
  def _reduce_65(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 245)
  def _reduce_66(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 250)
  def _reduce_67(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 254)
  def _reduce_68(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 259)
  def _reduce_69(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 263)
  def _reduce_70(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 269)
  def _reduce_72(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 275)
  def _reduce_74(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 280)
  def _reduce_75(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 284)
  def _reduce_76(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 289)
  def _reduce_77(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 293)
  def _reduce_78(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 79 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 300)
  def _reduce_80(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 304)
  def _reduce_81(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 308)
  def _reduce_82(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 312)
  def _reduce_83(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 316)
  def _reduce_84(val, _values)
                          :GT
                    
  end
.,.,

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 323)
  def _reduce_87(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 328)
  def _reduce_88(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 332)
  def _reduce_89(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 337)
  def _reduce_90(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 341)
  def _reduce_91(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 345)
  def _reduce_92(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 349)
  def _reduce_93(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 355)
  def _reduce_96(val, _values)
                      :NE
                
  end
.,.,

# reduce 97 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 361)
  def _reduce_98(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 365)
  def _reduce_99(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 369)
  def _reduce_100(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 101 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 375)
  def _reduce_102(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 379)
  def _reduce_103(val, _values)
                       false
                 
  end
.,.,

# reduce 104 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 385)
  def _reduce_105(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 391)
  def _reduce_107(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 396)
  def _reduce_108(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 400)
  def _reduce_109(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 405)
  def _reduce_110(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 409)
  def _reduce_111(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 414)
  def _reduce_112(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 418)
  def _reduce_113(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 423)
  def _reduce_114(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 428)
  def _reduce_115(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 433)
  def _reduce_116(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 437)
  def _reduce_117(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 442)
  def _reduce_118(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 447)
  def _reduce_119(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 451)
  def _reduce_120(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 456)
  def _reduce_121(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 460)
  def _reduce_122(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 464)
  def _reduce_123(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 124 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 471)
  def _reduce_125(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 475)
  def _reduce_126(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 480)
  def _reduce_127(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 484)
  def _reduce_128(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 489)
  def _reduce_129(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 503)
  def _reduce_138(val, _values)
               val[1]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 508)
  def _reduce_139(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 512)
  def _reduce_140(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 517)
  def _reduce_141(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 521)
  def _reduce_142(val, _values)
              val[1]
        
  end
.,.,

# reduce 143 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 527)
  def _reduce_144(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 532)
  def _reduce_145(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 536)
  def _reduce_146(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 545)
  def _reduce_150(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 549)
  def _reduce_151(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 553)
  def _reduce_152(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 558)
  def _reduce_153(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 562)
  def _reduce_154(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 567)
  def _reduce_155(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 571)
  def _reduce_156(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 576)
  def _reduce_157(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 580)
  def _reduce_158(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 585)
  def _reduce_159(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 589)
  def _reduce_160(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
