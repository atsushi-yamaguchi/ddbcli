#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 545)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CREATE
  CONTAINS
  COUNT
  DELETE
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEXT
  NOT
  NUMBER
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.scan /NULL/i)
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_:/]*|i)
      yield [:IDENTIFIER, tok]
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,     4,   252,   160,   160,    18,   191,   160,   160,   160,
    21,   288,   289,    19,    20,   162,   162,    52,    52,   162,
   162,   162,   110,   251,   160,   159,   159,   160,   190,   159,
   159,   159,    22,    23,    24,    25,   162,   263,   160,   162,
    26,   160,    25,   173,    50,    50,   159,   107,   174,   159,
   162,   201,   160,   162,   156,    52,   160,   229,    27,   230,
   159,    28,    29,   159,   162,    30,   161,   161,   162,   192,
   161,   161,   161,   197,   159,   128,   171,   128,   159,    54,
   201,    73,    50,    90,   172,    52,    91,   161,    94,   113,
   161,    93,   223,   198,   199,   200,   202,    55,   134,    49,
   107,   161,   197,    48,   161,    90,    57,    90,    91,   114,
    91,    47,    50,    56,   115,   161,    32,    33,    34,   161,
    35,   205,   198,   199,   200,   202,   204,   206,   209,   210,
   211,    36,    37,   311,    38,    39,   312,   305,   306,   307,
   231,   117,   232,   142,   143,   144,   233,   118,   234,   305,
   306,   307,   285,   119,   277,   142,   143,   144,   320,   121,
   321,   142,   143,   144,   276,   122,   277,   142,   143,   144,
   142,   143,   144,   288,   289,   241,   240,    78,    79,    78,
    79,   123,   124,   105,   107,   102,   129,   105,   133,   134,
    69,   138,   139,   140,   101,   100,   147,   148,   149,   134,
   151,   152,   105,    99,    98,   164,   165,   168,    63,   170,
    95,    97,    96,    95,   176,   178,   181,   182,   183,    63,
   185,   186,    88,    63,   133,    85,   196,    86,   212,   213,
   214,   215,   216,   217,   219,   168,   221,    85,   225,   121,
   227,   134,    83,    82,    81,   168,    80,   162,    76,    75,
   242,   244,   245,   246,   247,   248,   249,    63,    74,   196,
   181,    71,    70,   256,   147,   134,    63,   260,   261,   262,
   109,   264,   265,    69,   268,   269,    67,   271,   178,    63,
    66,   275,    65,   278,    64,   219,    63,    61,   283,    63,
    60,    59,   290,   291,   292,    58,   294,   295,   296,   297,
    45,   300,   301,   302,    44,    43,    42,   309,   310,    41,
   314,   316,   317,   318,    40,    31,   322,   323,   324,   172,
   174 ]

racc_action_check = [
     0,     0,   219,   275,   129,     0,   162,   165,   271,   263,
     0,   283,   283,     0,     0,   275,   129,    26,   100,   165,
   271,   263,    83,   219,   203,   275,   129,   205,   162,   165,
   271,   263,     0,     0,     0,     0,   203,   238,   244,   205,
     0,   222,    83,   139,    26,   100,   203,    81,   139,   205,
   244,   181,   223,   222,   129,    48,   277,   187,     0,   187,
   244,     0,     0,   222,   223,     0,   275,   129,   277,   162,
   165,   271,   263,   181,   223,   130,   138,   103,   277,    27,
   168,    48,    48,   140,   138,    25,   140,   203,    67,    85,
   205,    67,   181,   181,   181,   181,   181,    27,   130,    25,
   103,   244,   168,    25,   222,    66,    28,   118,    66,    90,
   118,    25,    25,    28,    91,   223,     2,     2,     2,   277,
     2,   168,   168,   168,   168,   168,   168,   168,   168,   168,
   168,    18,    18,   308,    18,    18,   308,   302,   302,   302,
   188,    93,   188,   314,   314,   314,   189,    94,   189,   301,
   301,   301,   281,    95,   281,   300,   300,   300,   315,    96,
   315,   117,   117,   117,   266,    97,   266,   249,   249,   249,
   296,   296,   296,   290,   290,   206,   206,    80,    80,    54,
    54,    98,    99,    77,   102,    76,   105,   106,   107,   109,
   110,   114,   115,   116,    75,    74,   120,   121,   122,   123,
   124,   125,   128,    73,    72,   131,   133,   134,   135,   136,
   137,    71,    70,    68,   141,   146,   147,   148,   149,   150,
   151,   152,    65,   163,   164,    64,   166,    63,   170,   171,
   172,   173,   174,   176,   177,   178,   179,    62,   182,   183,
   185,   186,    58,    57,    56,   196,    55,   204,    53,    51,
   211,   212,   213,   214,   215,   216,   217,   218,    49,   220,
   221,    47,    46,   225,   226,   227,   228,   230,   232,   234,
    82,   241,   243,    43,   245,   247,    42,   255,   257,   258,
    40,   265,    39,   270,    37,   272,    36,    35,   278,   280,
    34,    31,   286,   288,   289,    29,   291,   292,   294,   295,
    24,   297,   298,   299,    23,    22,    21,   303,   307,    20,
   309,   310,   311,   312,    19,     1,   317,   318,   321,   322,
   323 ]

racc_action_pointer = [
    -2,   315,   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123,   305,
   296,   297,   296,   291,   287,    72,     4,    66,    75,   230,
   nil,   291,   nil,   nil,   285,   282,   228,   274,   nil,   273,
   267,   nil,   263,   260,   nil,   nil,   224,   244,    42,   217,
   nil,   229,   nil,   210,   118,   233,   231,   205,   229,   nil,
   nil,   nil,   223,   200,   211,   209,    80,    74,   193,   nil,
   199,   171,   166,   186,   168,   181,   172,   170,   nil,   nil,
   116,     4,   257,     5,   nil,    84,   nil,   nil,   nil,   nil,
    83,    88,   nil,   128,   134,   140,   143,   147,   168,   142,
     5,   nil,   141,    57,   nil,   160,   174,   175,   nil,   146,
   177,   nil,   nil,   nil,   164,   165,   175,   139,    82,   nil,
   153,   168,   160,   156,   182,   163,   nil,   nil,   189,    -1,
    55,   161,   nil,   180,   194,   150,   191,   190,    56,    23,
    58,   195,   nil,   nil,   nil,   nil,   156,   203,   200,   205,
   161,   182,   208,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     1,   165,   211,     2,   182,   nil,    76,   nil,
   162,   201,   204,   206,   206,   nil,   213,   178,   222,   192,
   nil,    47,   225,   223,   nil,   227,   198,    39,   122,   128,
   nil,   nil,   nil,   nil,   nil,   nil,   232,   nil,   nil,   nil,
   nil,   nil,   nil,    19,   230,    22,   121,   nil,   nil,   nil,
   nil,   197,   234,   226,   226,   228,   228,   243,   199,   -34,
   215,   247,    36,    47,   nil,   245,   221,   222,   208,   nil,
   240,   nil,   263,   nil,   201,   nil,   nil,   nil,    -7,   nil,
   nil,   216,   nil,   252,    33,   247,   nil,   248,   nil,   145,
   nil,   nil,   nil,   nil,   nil,   233,   nil,   219,   221,   nil,
   nil,   nil,   nil,     4,   nil,   264,   146,   nil,   nil,   nil,
   262,     3,   229,   nil,   nil,    -2,   nil,    51,   268,   nil,
   231,   134,   nil,   -18,   nil,   nil,   272,   nil,   280,   265,
   144,   279,   284,   nil,   285,   282,   148,   288,   284,   285,
   133,   118,   106,   287,   nil,   nil,   nil,   291,   108,   297,
   298,   286,   287,   nil,   121,   140,   nil,   289,   290,   nil,
   nil,   305,   291,   295,   nil ]

racc_action_default = [
  -145,  -145,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -145,  -145,
  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -145,
  -126,  -145,    -2,    -3,  -145,  -145,  -101,  -145,   -23,  -145,
  -145,   -28,  -145,  -145,   -56,   -57,  -145,  -145,  -145,  -145,
   -64,   -65,   -66,  -145,  -145,  -145,  -145,  -145,  -145,   325,
    -4,    -5,   -25,  -145,   -25,  -145,  -145,  -145,   -55,  -143,
  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -107,  -108,
  -145,  -145,  -145,  -145,   -21,  -145,  -102,   -22,   -24,   -27,
  -145,  -145,   -40,  -145,  -145,  -145,   -68,  -145,  -145,  -145,
  -145,   -67,  -145,  -145,  -109,  -145,  -145,  -145,  -116,   -83,
  -145,  -119,  -120,   -26,  -145,  -145,  -145,  -145,   -30,  -144,
   -70,  -145,  -145,   -83,  -145,  -145,   -63,  -105,  -145,  -145,
   -83,  -112,  -113,  -145,  -145,  -101,  -145,  -121,  -145,  -145,
  -145,  -145,   -35,   -36,   -37,   -31,  -103,  -145,  -145,  -145,
  -101,  -145,  -145,  -110,  -111,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -145,  -101,  -145,  -145,   -84,   -85,  -145,  -117,
  -145,  -145,  -145,  -145,  -145,   -29,   -32,   -98,  -145,   -71,
   -72,  -145,  -145,   -68,   -60,  -145,   -83,  -145,  -145,  -145,
  -137,  -139,  -141,  -106,  -114,  -115,  -145,   -77,   -78,   -79,
   -80,   -81,   -82,  -145,  -145,  -145,  -145,   -91,   -92,   -93,
   -94,  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -101,  -145,
  -104,  -145,  -145,  -145,   -76,  -145,   -70,   -83,  -101,  -134,
  -145,  -135,  -145,  -136,  -145,   -86,   -87,   -88,  -145,   -90,
   -96,  -145,   -95,  -118,  -145,  -145,   -41,  -145,   -42,  -145,
   -58,   -99,  -100,   -73,   -74,  -145,   -69,  -103,  -101,   -62,
  -138,  -140,  -142,  -145,   -97,  -145,  -145,  -124,   -38,   -39,
  -145,  -145,   -98,   -61,   -89,  -145,  -122,  -145,   -33,   -75,
  -101,  -145,  -125,  -145,   -59,  -123,   -34,   -43,  -145,  -145,
  -145,  -145,  -145,   -44,  -145,  -145,  -145,  -145,  -145,  -145,
  -145,  -145,  -145,   -48,   -45,   -50,   -51,  -145,   -46,  -145,
  -145,  -145,  -145,   -47,  -145,  -145,   -53,  -145,  -145,   -49,
   -52,  -145,  -145,  -145,   -54 ]

racc_goto_table = [
    62,   141,   155,   135,   177,   146,   218,   120,    11,    12,
    46,    53,   180,    89,    68,   132,   166,   150,   266,   103,
    77,   108,   207,   287,   163,    84,     1,    87,   304,   308,
   293,   315,   313,    72,   286,   224,   299,   116,   195,    17,
    16,    15,   126,   127,    14,   179,   106,    13,   130,   281,
   222,    10,     9,     8,   235,   203,   237,   239,   208,     7,
   220,     6,   153,   154,   131,   145,     5,   136,   243,     2,
   187,   188,   194,   189,   nil,   nil,   236,   nil,   238,   nil,
   228,   137,   nil,   nil,   nil,   125,   253,   175,   nil,   nil,
   nil,   111,   112,   nil,   226,   254,   255,   nil,   nil,   169,
   nil,   280,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   257,   nil,   nil,   184,   272,   nil,   nil,   nil,   nil,
   nil,   258,   nil,   nil,   nil,   nil,   nil,   193,   nil,   nil,
   nil,   nil,   nil,   270,   nil,   nil,   274,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   279,   nil,   nil,   nil,   nil,   nil,
   282,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   298,   nil,   250,   nil,   303,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   259,   nil,   nil,   nil,   nil,   nil,   319,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   273,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   284 ]

racc_goto_check = [
    16,    20,    39,    33,    31,    30,    32,    29,     9,    10,
    28,    28,    37,    18,    27,    52,    41,    33,    55,    48,
    47,    34,    40,    23,    33,    17,     1,    17,    24,    24,
    23,    26,    22,    28,    21,    40,    25,    19,    39,    15,
    14,    13,    34,    34,    12,    36,    47,    11,    48,    55,
    38,     8,     7,     6,    42,    43,    44,    45,    46,     5,
    41,     4,    49,    50,    51,    18,     3,    53,    54,     2,
    57,    58,    52,    59,   nil,   nil,    39,   nil,    39,   nil,
    33,    27,   nil,   nil,   nil,    28,    37,    18,   nil,   nil,
   nil,     9,    10,   nil,    29,    39,    39,   nil,   nil,    16,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    30,   nil,   nil,    16,    31,   nil,   nil,   nil,   nil,
   nil,    33,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,
   nil,   nil,   nil,    20,   nil,   nil,    39,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,
    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20,   nil,    16,   nil,    20,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,    20,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    26,    69,    66,    61,    59,    53,    52,    51,     8,
     9,    47,    44,    41,    40,    39,   -36,   -37,   -53,   -56,
  -116,  -249,  -276,  -260,  -273,  -261,  -279,   -29,   -15,   -89,
  -115,  -142,  -171,  -106,   -60,   nil,  -102,  -135,  -131,  -127,
  -146,  -118,  -142,  -113,  -148,  -149,  -110,   -34,   -58,   -66,
   -66,   -43,   -92,   -43,  -144,  -226,   nil,   -92,   -91,   -89 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    92,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    51,   nil,   nil,   nil,   267,
   nil,   nil,   167,   nil,   158,   nil,   nil,   nil,   nil,   104,
   nil,   nil,   nil,   nil,   nil,   nil,   157,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 70, :_reduce_1,
  2, 70, :_reduce_2,
  2, 70, :_reduce_3,
  3, 70, :_reduce_4,
  3, 70, :_reduce_5,
  1, 70, :_reduce_6,
  1, 70, :_reduce_7,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  4, 72, :_reduce_21,
  4, 72, :_reduce_22,
  2, 72, :_reduce_23,
  4, 72, :_reduce_24,
  0, 86, :_reduce_none,
  2, 86, :_reduce_26,
  4, 73, :_reduce_27,
  2, 74, :_reduce_28,
  7, 75, :_reduce_29,
  5, 75, :_reduce_30,
  6, 75, :_reduce_31,
  3, 88, :_reduce_32,
  7, 88, :_reduce_33,
  9, 88, :_reduce_34,
  1, 89, :_reduce_35,
  1, 89, :_reduce_36,
  1, 89, :_reduce_37,
  7, 87, :_reduce_38,
  7, 87, :_reduce_39,
  1, 87, :_reduce_none,
  6, 91, :_reduce_41,
  6, 91, :_reduce_42,
  1, 90, :_reduce_43,
  3, 90, :_reduce_44,
  7, 92, :_reduce_45,
  7, 92, :_reduce_46,
  8, 92, :_reduce_47,
  2, 94, :_reduce_48,
  5, 94, :_reduce_49,
  1, 93, :_reduce_50,
  1, 93, :_reduce_51,
  4, 93, :_reduce_52,
  1, 95, :_reduce_53,
  3, 95, :_reduce_54,
  3, 76, :_reduce_55,
  2, 77, :_reduce_56,
  2, 77, :_reduce_57,
  9, 78, :_reduce_58,
  12, 78, :_reduce_59,
  7, 79, :_reduce_60,
  10, 79, :_reduce_61,
  9, 79, :_reduce_62,
  5, 80, :_reduce_63,
  1, 97, :_reduce_64,
  1, 97, :_reduce_65,
  1, 104, :_reduce_66,
  3, 104, :_reduce_67,
  0, 98, :_reduce_none,
  5, 98, :_reduce_69,
  0, 99, :_reduce_none,
  2, 99, :_reduce_71,
  1, 105, :_reduce_72,
  3, 105, :_reduce_73,
  3, 106, :_reduce_74,
  5, 106, :_reduce_75,
  1, 107, :_reduce_none,
  1, 109, :_reduce_77,
  1, 109, :_reduce_78,
  1, 109, :_reduce_79,
  1, 109, :_reduce_80,
  1, 109, :_reduce_81,
  1, 109, :_reduce_none,
  0, 102, :_reduce_none,
  2, 102, :_reduce_84,
  1, 110, :_reduce_85,
  3, 110, :_reduce_86,
  3, 111, :_reduce_87,
  3, 111, :_reduce_88,
  5, 111, :_reduce_89,
  3, 111, :_reduce_90,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_93,
  1, 115, :_reduce_none,
  2, 115, :_reduce_95,
  1, 114, :_reduce_96,
  2, 114, :_reduce_97,
  0, 101, :_reduce_none,
  2, 101, :_reduce_99,
  2, 101, :_reduce_100,
  0, 85, :_reduce_none,
  2, 85, :_reduce_102,
  0, 100, :_reduce_none,
  2, 100, :_reduce_104,
  5, 81, :_reduce_105,
  7, 81, :_reduce_106,
  1, 116, :_reduce_107,
  1, 116, :_reduce_108,
  1, 117, :_reduce_109,
  3, 117, :_reduce_110,
  3, 118, :_reduce_111,
  2, 103, :_reduce_112,
  1, 120, :_reduce_113,
  3, 120, :_reduce_114,
  3, 121, :_reduce_115,
  4, 82, :_reduce_116,
  6, 82, :_reduce_117,
  8, 83, :_reduce_118,
  4, 83, :_reduce_119,
  4, 83, :_reduce_120,
  1, 122, :_reduce_none,
  3, 123, :_reduce_122,
  5, 123, :_reduce_123,
  1, 124, :_reduce_124,
  3, 124, :_reduce_125,
  1, 84, :_reduce_126,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  3, 113, :_reduce_134,
  3, 113, :_reduce_135,
  3, 113, :_reduce_136,
  1, 126, :_reduce_137,
  3, 126, :_reduce_138,
  1, 127, :_reduce_139,
  3, 127, :_reduce_140,
  1, 128, :_reduce_141,
  3, 128, :_reduce_142,
  1, 96, :_reduce_143,
  3, 96, :_reduce_144 ]

racc_reduce_n = 145

racc_shift_n = 325

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :USE => 16,
  "(" => 17,
  ")" => 18,
  :HASH => 19,
  "," => 20,
  :RANGE => 21,
  :STRING => 22,
  :NUMBER => 23,
  :BINARY => 24,
  :READ => 25,
  :EQ => 26,
  :NUMBER_VALUE => 27,
  :WRITE => 28,
  :INDEX => 29,
  :GLOBAL => 30,
  :ALL => 31,
  :KEYS_ONLY => 32,
  :INCLUDE => 33,
  :DROP => 34,
  :DESCRIBE => 35,
  :DESC => 36,
  :SELECT => 37,
  :FROM => 38,
  :COUNT => 39,
  "*" => 40,
  "/" => 41,
  :GET => 42,
  :WHERE => 43,
  :AND => 44,
  :BETWEEN => 45,
  :LE => 46,
  :LT => 47,
  :GE => 48,
  :BEGINS_WITH => 49,
  :IN => 50,
  :IS => 51,
  :NE => 52,
  :CONTAINS => 53,
  :NOT => 54,
  :NULL => 55,
  :ORDER => 56,
  :ASC => 57,
  :LIMIT => 58,
  :HAVING => 59,
  :UPDATE => 60,
  :SET => 61,
  :ADD => 62,
  :DELETE => 63,
  :INSERT => 64,
  :INTO => 65,
  :VALUES => 66,
  :NEXT => 67,
  :BINARY_VALUE => 68 }

racc_nt_base = 69

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "USE",
  "\"(\"",
  "\")\"",
  "HASH",
  "\",\"",
  "RANGE",
  "STRING",
  "NUMBER",
  "BINARY",
  "READ",
  "EQ",
  "NUMBER_VALUE",
  "WRITE",
  "INDEX",
  "GLOBAL",
  "ALL",
  "KEYS_ONLY",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "create_definition",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "attr_to_update",
  "value_or_null",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :capacity => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_28(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 81)
  def _reduce_29(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 85)
  def _reduce_30(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 89)
  def _reduce_31(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 94)
  def _reduce_32(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 98)
  def _reduce_33(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 102)
  def _reduce_34(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 107)
  def _reduce_35(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 111)
  def _reduce_36(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 115)
  def _reduce_37(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 120)
  def _reduce_38(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 124)
  def _reduce_39(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 130)
  def _reduce_41(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 134)
  def _reduce_42(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 139)
  def _reduce_43(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 143)
  def _reduce_44(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 148)
  def _reduce_45(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 152)
  def _reduce_46(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 156)
  def _reduce_47(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 161)
  def _reduce_48(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 165)
  def _reduce_49(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 173)
  def _reduce_50(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 177)
  def _reduce_51(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 181)
  def _reduce_52(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 186)
  def _reduce_53(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 190)
  def _reduce_54(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 195)
  def _reduce_55(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 200)
  def _reduce_56(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_57(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 209)
  def _reduce_58(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 213)
  def _reduce_59(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 218)
  def _reduce_60(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 222)
  def _reduce_61(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 226)
  def _reduce_62(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 231)
  def _reduce_63(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 236)
  def _reduce_64(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 240)
  def _reduce_65(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 245)
  def _reduce_66(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 249)
  def _reduce_67(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 68 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 255)
  def _reduce_69(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 261)
  def _reduce_71(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 266)
  def _reduce_72(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 270)
  def _reduce_73(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 275)
  def _reduce_74(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 279)
  def _reduce_75(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 76 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 286)
  def _reduce_77(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 290)
  def _reduce_78(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 294)
  def _reduce_79(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 298)
  def _reduce_80(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 302)
  def _reduce_81(val, _values)
                          :GT
                    
  end
.,.,

# reduce 82 omitted

# reduce 83 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 309)
  def _reduce_84(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 314)
  def _reduce_85(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 318)
  def _reduce_86(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 323)
  def _reduce_87(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 327)
  def _reduce_88(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 331)
  def _reduce_89(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 335)
  def _reduce_90(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 341)
  def _reduce_93(val, _values)
                      :NE
                
  end
.,.,

# reduce 94 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 347)
  def _reduce_95(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 351)
  def _reduce_96(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 355)
  def _reduce_97(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 98 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 361)
  def _reduce_99(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 365)
  def _reduce_100(val, _values)
                       false
                 
  end
.,.,

# reduce 101 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 371)
  def _reduce_102(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 103 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 377)
  def _reduce_104(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 382)
  def _reduce_105(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 386)
  def _reduce_106(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 391)
  def _reduce_107(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 395)
  def _reduce_108(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 400)
  def _reduce_109(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 404)
  def _reduce_110(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 409)
  def _reduce_111(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 414)
  def _reduce_112(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 419)
  def _reduce_113(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 423)
  def _reduce_114(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 428)
  def _reduce_115(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 433)
  def _reduce_116(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 437)
  def _reduce_117(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 442)
  def _reduce_118(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 446)
  def _reduce_119(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 450)
  def _reduce_120(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 121 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 457)
  def _reduce_122(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 461)
  def _reduce_123(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 466)
  def _reduce_124(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 470)
  def _reduce_125(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 475)
  def _reduce_126(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 489)
  def _reduce_134(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 493)
  def _reduce_135(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 497)
  def _reduce_136(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 502)
  def _reduce_137(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 506)
  def _reduce_138(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 511)
  def _reduce_139(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 515)
  def _reduce_140(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 520)
  def _reduce_141(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 524)
  def _reduce_142(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 529)
  def _reduce_143(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 533)
  def _reduce_144(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
