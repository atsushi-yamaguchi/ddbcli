#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 477)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CREATE
  CONTAINS
  COUNT
  DELETE
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  HASH
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEXT
  NOT
  NUMBER
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:<>|!=|>=|<=|>|<|=)/)
      sym = {
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.scan /NULL/i)
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /[-.0-9a-z_]*/i)
      yield [:IDENTIFIER, tok]
    else
      raise Racc::ParseError, ('parse error on value "%s"' % @ss.rest.inspect)
    end
  end

  yield [false, 'EOF']
end
private :scan

def parse
  yyparse self, :scan
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,     4,    18,   141,   232,    21,   167,   141,    19,    20,
   141,    48,   141,    78,   138,   141,    79,    94,   138,   108,
   141,   138,   141,   138,   141,    48,   138,    22,    23,    24,
    25,   138,   141,   138,    26,   138,   141,    46,   141,    95,
   114,   135,    45,   138,    96,   168,   169,   138,   196,   138,
    44,    46,    27,   139,   140,    28,    29,   139,   140,    30,
   139,   140,   139,   140,   108,   139,   140,    50,    97,   195,
   139,   140,   139,   140,   139,   140,   174,   253,   245,    48,
   246,   246,   139,   140,    51,    92,   139,   140,   139,   140,
   174,   216,   215,   182,   175,   176,   177,   178,   179,   181,
   183,   186,   187,   188,    65,    46,    53,   199,   175,   176,
   177,   178,   179,    52,   208,   149,   206,   209,   150,   207,
   271,    78,   204,   272,    79,   205,    78,    99,    80,    79,
    81,   265,   266,   267,   122,   123,   124,   122,   123,   124,
    34,    35,    36,   122,   123,   124,    69,    70,    32,    33,
    69,    70,   100,   102,   103,   104,   105,    92,    75,   109,
    90,   113,   114,   117,   118,   119,   120,    90,    74,   127,
   128,   129,   114,   131,    90,    73,    72,   143,   144,   147,
    57,    71,   151,   152,    87,   154,   156,   159,   160,   161,
    57,   163,    67,    57,   113,    66,   173,    63,   189,   190,
   191,   192,   193,    57,    62,   197,    61,   201,   102,   203,
    60,    59,    58,   147,    57,   141,    55,    86,   217,   219,
   220,   221,   222,   159,    54,    42,   226,   127,   114,   229,
   230,   231,    92,   233,   234,    41,   237,   238,    85,   240,
   156,    57,    40,   244,    39,   247,    38,    57,    37,    84,
   252,    83,   256,   257,   258,   256,   260,   261,    82,   263,
    76,   268,   270,    31,   273 ]

racc_action_check = [
     0,     0,     0,   109,   213,     0,   141,   144,     0,     0,
   246,    26,   244,    59,   109,   240,    59,    73,   144,   110,
   198,   246,   232,   244,   219,    25,   240,     0,     0,     0,
     0,   198,   199,   232,     0,   219,   182,    26,   180,    74,
   110,   109,    25,   199,    78,   141,   141,   182,   156,   180,
    25,    25,     0,   109,   109,     0,     0,   144,   144,     0,
   246,   246,   244,   244,    88,   240,   240,    27,    79,   156,
   198,   198,   232,   232,   219,   219,   147,   250,   235,    45,
   250,   235,   199,   199,    27,    88,   182,   182,   180,   180,
   159,   183,   183,   147,   147,   147,   147,   147,   147,   147,
   147,   147,   147,   147,    45,    45,    28,   159,   159,   159,
   159,   159,   159,    28,   166,   116,   165,   166,   116,   165,
   269,   100,   164,   269,   100,   164,   120,    80,    60,   120,
    60,   263,   263,   263,   261,   261,   261,    99,    99,    99,
    18,    18,    18,   222,   222,   222,    50,    50,     2,     2,
    71,    71,    81,    82,    83,    84,    85,    87,    57,    90,
    91,    92,    94,    95,    96,    97,    98,    68,    54,   101,
   102,   103,   104,   105,   108,    53,    52,   111,   113,   114,
   115,    51,   118,   119,    67,   121,   126,   127,   128,   129,
   130,   131,    49,   142,   143,    47,   145,    44,   149,   150,
   151,   152,   154,   155,    43,   157,    40,   160,   161,   163,
    39,    37,    36,   173,    34,   181,    31,    66,   188,   189,
   191,   192,   193,   197,    29,    24,   201,   202,   203,   205,
   207,   209,    72,   216,   218,    23,   220,   221,    65,   225,
   227,   228,    22,   234,    21,   239,    20,   241,    19,    64,
   247,    63,   252,   254,   256,   257,   258,   260,    62,   262,
    58,   267,   268,     1,   272 ]

racc_action_pointer = [
    -2,   263,   146,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   135,   240,
   237,   236,   234,   226,   216,    16,     2,    58,    80,   165,
   nil,   216,   nil,   nil,   161,   nil,   204,   202,   nil,   201,
   197,   nil,   nil,   171,   185,    70,   nil,   179,   nil,   159,
    91,   172,   167,   142,   159,   nil,   nil,   135,   251,    -8,
   116,   nil,   249,   216,   216,   226,   208,   175,   158,   nil,
   nil,    95,   195,     8,    27,   nil,   nil,   nil,    22,    46,
   118,   143,   142,   141,   146,   121,   nil,   120,    48,   nil,
   137,   151,   152,   nil,   125,   154,   141,   142,   153,   119,
   100,   132,   145,   138,   135,   160,   nil,   nil,   165,    -9,
     3,   139,   nil,   156,   170,   127,   102,   nil,   166,   167,
   105,   170,   nil,   nil,   nil,   nil,   135,   178,   176,   180,
   137,   158,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   -17,   140,   185,    -5,   158,   nil,    54,   nil,   138,
   190,   176,   180,   nil,   186,   150,    17,   167,   nil,    68,
   198,   197,   nil,   200,   109,   103,   101,   nil,   nil,   nil,
   nil,   nil,   nil,   204,   nil,   nil,   nil,   nil,   nil,   nil,
    26,   203,    24,    42,   nil,   nil,   nil,   nil,   170,   207,
   nil,   198,   199,   213,   nil,   nil,   nil,   214,     8,    20,
   nil,   213,   190,   191,   nil,   206,   nil,   168,   nil,   168,
   nil,   nil,   nil,   -34,   nil,   nil,   183,   nil,   218,    12,
   213,   214,   125,   nil,   nil,   201,   nil,   189,   188,   nil,
   nil,   nil,    10,   nil,   231,    65,   nil,   nil,   nil,   228,
     3,   194,   nil,   nil,     0,   nil,    -2,   234,   nil,   nil,
    64,   nil,   227,   nil,   237,   nil,   245,   230,   244,   nil,
   248,   116,   246,   105,   nil,   nil,   nil,   249,   253,   107,
   nil,   nil,   255,   nil ]

racc_action_default = [
  -127,  -127,    -1,    -4,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,  -127,  -127,
  -127,  -127,  -127,  -127,  -127,  -127,  -127,  -127,  -127,  -127,
  -110,  -127,    -2,    -3,   -88,   -20,  -127,  -127,   -23,  -127,
  -127,   -44,   -45,  -127,  -127,  -127,   -51,   -52,   -53,  -127,
  -127,  -127,  -127,  -127,  -127,   274,   -19,  -127,  -127,  -127,
  -127,   -43,  -127,  -127,  -127,  -127,  -127,  -127,  -127,   -92,
   -93,  -127,  -127,  -127,  -127,   -89,   -21,   -22,  -127,  -127,
  -127,  -127,   -55,  -127,  -127,  -127,   -54,  -127,  -127,   -94,
  -127,  -127,  -127,  -101,   -70,  -127,  -127,  -127,  -127,  -127,
   -25,   -57,  -127,  -127,   -70,  -127,   -50,   -90,  -127,  -127,
   -70,   -97,   -98,  -127,  -127,   -88,  -127,  -104,  -127,  -127,
  -127,  -127,   -30,   -31,   -32,   -26,   -85,  -127,  -127,  -127,
   -88,  -127,   -95,   -96,  -111,  -112,  -113,  -114,  -115,  -116,
  -117,  -127,   -88,  -127,  -127,   -71,   -72,  -127,  -102,  -127,
  -127,  -127,  -127,   -24,   -27,   -88,  -127,   -58,   -59,  -127,
  -127,   -55,   -48,  -127,  -127,  -127,  -127,  -121,  -123,  -125,
   -91,   -99,  -100,  -127,   -64,   -65,   -66,   -67,   -68,   -69,
  -127,  -127,  -127,  -127,   -78,   -79,   -80,   -81,  -127,  -127,
  -105,  -127,  -127,  -127,   -46,   -86,   -87,  -127,  -127,  -127,
   -63,  -127,   -57,   -70,  -118,  -127,  -119,  -127,  -120,  -127,
   -73,   -74,   -75,  -127,   -77,   -83,  -127,   -82,  -103,  -127,
  -127,  -127,  -127,   -60,   -61,  -127,   -56,   -85,   -88,  -122,
  -124,  -126,  -127,   -84,  -127,  -127,  -108,   -33,   -34,  -127,
  -127,   -88,   -49,   -76,  -127,  -106,  -127,   -28,   -62,   -47,
  -127,  -109,  -127,  -107,   -29,   -35,  -127,  -127,  -127,   -36,
  -127,  -127,  -127,  -127,   -37,   -38,   -39,  -127,  -127,  -127,
   -41,   -40,  -127,   -42 ]

racc_goto_table = [
    56,   121,   134,   115,   126,   155,   101,   158,    77,   146,
   112,   235,    88,   130,    43,    49,    93,    68,   184,   142,
   255,     1,   254,    17,   264,   259,   269,    16,    15,    14,
   200,   106,   107,    98,    64,   110,   250,   172,    91,    13,
    12,   157,    11,   198,    10,     9,   145,     8,   180,   125,
   212,   214,   185,     7,     6,   132,   133,   111,     5,   116,
   218,   171,     2,   164,   165,   166,   nil,   nil,   210,   153,
   nil,   nil,   nil,   211,   nil,   213,   nil,   223,   nil,   nil,
   nil,   148,   nil,   nil,   nil,   202,   nil,   nil,   nil,   nil,
   nil,   224,   225,   nil,   nil,   nil,   162,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   227,   241,   nil,   170,   nil,
   nil,   nil,   228,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   194,   nil,   nil,   239,   243,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   248,   nil,   nil,   nil,   nil,   nil,   251,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   262,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   242,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   249 ]

racc_goto_check = [
    16,    19,    34,    28,    26,    27,    25,    32,    17,    37,
    47,    50,    43,    28,    24,    24,    29,    42,    35,    28,
    21,     1,    20,    15,    22,    21,    23,    14,    13,    12,
    35,    29,    29,    18,    24,    43,    50,    34,    42,    11,
    10,    31,     9,    33,     8,     7,    36,     6,    38,    17,
    39,    40,    41,     5,     4,    44,    45,    46,     3,    48,
    49,    47,     2,    52,    53,    54,   nil,   nil,    37,    17,
   nil,   nil,   nil,    34,   nil,    34,   nil,    32,   nil,   nil,
   nil,    16,   nil,   nil,   nil,    25,   nil,   nil,   nil,   nil,
   nil,    34,    34,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    26,    27,   nil,    16,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,    19,    34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    34,   nil,   nil,   nil,   nil,   nil,    34,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    21,    62,    58,    54,    53,    47,    45,    44,    42,
    40,    39,    29,    28,    27,    23,   -34,   -51,   -47,   -98,
  -230,  -232,  -239,  -242,   -11,   -76,   -97,  -121,   -91,   -56,
   nil,   -86,  -120,  -116,  -107,  -129,   -68,  -105,   -99,  -131,
  -132,   -95,   -33,   -56,   -53,   -53,   -35,   -82,   -36,  -129,
  -208,   nil,   -78,   -77,   -76 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    47,   nil,   nil,   nil,   236,   nil,   nil,   nil,   nil,   137,
   nil,   nil,   nil,   nil,    89,   nil,   nil,   nil,   nil,   nil,
   nil,   136,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 65, :_reduce_1,
  2, 65, :_reduce_2,
  2, 65, :_reduce_3,
  1, 65, :_reduce_4,
  1, 65, :_reduce_5,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  3, 67, :_reduce_19,
  2, 67, :_reduce_20,
  4, 67, :_reduce_21,
  4, 68, :_reduce_22,
  2, 69, :_reduce_23,
  7, 70, :_reduce_24,
  5, 70, :_reduce_25,
  6, 70, :_reduce_26,
  3, 82, :_reduce_27,
  7, 82, :_reduce_28,
  9, 82, :_reduce_29,
  1, 83, :_reduce_30,
  1, 83, :_reduce_31,
  1, 83, :_reduce_32,
  7, 81, :_reduce_33,
  7, 81, :_reduce_34,
  1, 84, :_reduce_35,
  3, 84, :_reduce_36,
  7, 85, :_reduce_37,
  1, 86, :_reduce_38,
  1, 86, :_reduce_39,
  4, 86, :_reduce_40,
  1, 87, :_reduce_41,
  3, 87, :_reduce_42,
  3, 71, :_reduce_43,
  2, 72, :_reduce_44,
  2, 72, :_reduce_45,
  8, 73, :_reduce_46,
  11, 73, :_reduce_47,
  7, 74, :_reduce_48,
  10, 74, :_reduce_49,
  5, 75, :_reduce_50,
  1, 88, :_reduce_51,
  1, 88, :_reduce_52,
  1, 94, :_reduce_53,
  3, 94, :_reduce_54,
  0, 89, :_reduce_none,
  5, 89, :_reduce_56,
  0, 90, :_reduce_none,
  2, 90, :_reduce_58,
  1, 95, :_reduce_59,
  3, 95, :_reduce_60,
  3, 96, :_reduce_61,
  5, 96, :_reduce_62,
  1, 97, :_reduce_none,
  1, 99, :_reduce_64,
  1, 99, :_reduce_65,
  1, 99, :_reduce_66,
  1, 99, :_reduce_67,
  1, 99, :_reduce_68,
  1, 99, :_reduce_none,
  0, 92, :_reduce_none,
  2, 92, :_reduce_71,
  1, 100, :_reduce_72,
  3, 100, :_reduce_73,
  3, 101, :_reduce_74,
  3, 101, :_reduce_75,
  5, 101, :_reduce_76,
  3, 101, :_reduce_77,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_80,
  1, 105, :_reduce_none,
  2, 105, :_reduce_82,
  1, 104, :_reduce_83,
  2, 104, :_reduce_84,
  0, 91, :_reduce_none,
  2, 91, :_reduce_86,
  2, 91, :_reduce_87,
  0, 80, :_reduce_none,
  2, 80, :_reduce_89,
  5, 76, :_reduce_90,
  7, 76, :_reduce_91,
  1, 106, :_reduce_92,
  1, 106, :_reduce_93,
  1, 107, :_reduce_94,
  3, 107, :_reduce_95,
  3, 108, :_reduce_96,
  2, 93, :_reduce_97,
  1, 110, :_reduce_98,
  3, 110, :_reduce_99,
  3, 111, :_reduce_100,
  4, 77, :_reduce_101,
  6, 77, :_reduce_102,
  8, 78, :_reduce_103,
  1, 112, :_reduce_104,
  3, 112, :_reduce_105,
  3, 113, :_reduce_106,
  5, 113, :_reduce_107,
  1, 114, :_reduce_108,
  3, 114, :_reduce_109,
  1, 79, :_reduce_110,
  1, 109, :_reduce_none,
  1, 109, :_reduce_none,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 103, :_reduce_118,
  3, 103, :_reduce_119,
  3, 103, :_reduce_120,
  1, 116, :_reduce_121,
  3, 116, :_reduce_122,
  1, 117, :_reduce_123,
  3, 117, :_reduce_124,
  1, 118, :_reduce_125,
  3, 118, :_reduce_126 ]

racc_reduce_n = 127

racc_shift_n = 274

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :SHOW => 4,
  :TABLES => 5,
  :REGIONS => 6,
  :CREATE => 7,
  :TABLE => 8,
  :IDENTIFIER => 9,
  :ALTER => 10,
  :USE => 11,
  "(" => 12,
  ")" => 13,
  :LIKE => 14,
  :HASH => 15,
  "," => 16,
  :RANGE => 17,
  :STRING => 18,
  :NUMBER => 19,
  :BINARY => 20,
  :READ => 21,
  :EQ => 22,
  :NUMBER_VALUE => 23,
  :WRITE => 24,
  :INDEX => 25,
  :ALL => 26,
  :KEYS_ONLY => 27,
  :INCLUDE => 28,
  :DROP => 29,
  :DESCRIBE => 30,
  :DESC => 31,
  :SELECT => 32,
  :FROM => 33,
  :COUNT => 34,
  "*" => 35,
  :GET => 36,
  :WHERE => 37,
  :AND => 38,
  :BETWEEN => 39,
  :LE => 40,
  :LT => 41,
  :GE => 42,
  :GT => 43,
  :BEGINS_WITH => 44,
  :IN => 45,
  :IS => 46,
  :NE => 47,
  :CONTAINS => 48,
  :NOT => 49,
  :NULL => 50,
  :ORDER => 51,
  :ASC => 52,
  :LIMIT => 53,
  :UPDATE => 54,
  :SET => 55,
  :ADD => 56,
  :DELETE => 57,
  :INSERT => 58,
  :INTO => 59,
  :VALUES => 60,
  :NEXT => 61,
  :STRING_VALUE => 62,
  :BINARY_VALUE => 63 }

racc_nt_base = 64

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "SHOW",
  "TABLES",
  "REGIONS",
  "CREATE",
  "TABLE",
  "IDENTIFIER",
  "ALTER",
  "USE",
  "\"(\"",
  "\")\"",
  "LIKE",
  "HASH",
  "\",\"",
  "RANGE",
  "STRING",
  "NUMBER",
  "BINARY",
  "READ",
  "EQ",
  "NUMBER_VALUE",
  "WRITE",
  "INDEX",
  "ALL",
  "KEYS_ONLY",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "GT",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "STRING_VALUE",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "capacity_clause",
  "create_definition",
  "attr_type_list",
  "index_definition_list",
  "index_definition",
  "index_type_definition",
  "index_include_attr_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "attr_to_update",
  "value_or_null",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 40)
  def _reduce_19(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 44)
  def _reduce_20(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 53)
  def _reduce_22(val, _values)
                    struct(:ALTER_TABLE, :table => val[2], :capacity => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 58)
  def _reduce_23(val, _values)
                 struct(:USE, :endpoint_or_region => val[1])
           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 63)
  def _reduce_24(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 67)
  def _reduce_25(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_26(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_27(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 80)
  def _reduce_28(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 84)
  def _reduce_29(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 89)
  def _reduce_30(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 93)
  def _reduce_31(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 97)
  def _reduce_32(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 102)
  def _reduce_33(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 106)
  def _reduce_34(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 111)
  def _reduce_35(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 115)
  def _reduce_36(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 120)
  def _reduce_37(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 125)
  def _reduce_38(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 129)
  def _reduce_39(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 133)
  def _reduce_40(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 138)
  def _reduce_41(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 142)
  def _reduce_42(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 147)
  def _reduce_43(val, _values)
                    struct(:DROP, :table => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 152)
  def _reduce_44(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 156)
  def _reduce_45(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 161)
  def _reduce_46(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :order_asc => val[6], :limit => val[7], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 165)
  def _reduce_47(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :order_asc => val[9], :limit => val[10], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 170)
  def _reduce_48(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 174)
  def _reduce_49(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 179)
  def _reduce_50(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 184)
  def _reduce_51(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 188)
  def _reduce_52(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 193)
  def _reduce_53(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 197)
  def _reduce_54(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 203)
  def _reduce_56(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 209)
  def _reduce_58(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 214)
  def _reduce_59(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 218)
  def _reduce_60(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 223)
  def _reduce_61(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 227)
  def _reduce_62(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 234)
  def _reduce_64(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 238)
  def _reduce_65(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 242)
  def _reduce_66(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 246)
  def _reduce_67(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 250)
  def _reduce_68(val, _values)
                          :GT
                    
  end
.,.,

# reduce 69 omitted

# reduce 70 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 257)
  def _reduce_71(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 262)
  def _reduce_72(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 266)
  def _reduce_73(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 271)
  def _reduce_74(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 275)
  def _reduce_75(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 279)
  def _reduce_76(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 283)
  def _reduce_77(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 289)
  def _reduce_80(val, _values)
                      :NE
                
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 295)
  def _reduce_82(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 299)
  def _reduce_83(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 303)
  def _reduce_84(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 85 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 309)
  def _reduce_86(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 313)
  def _reduce_87(val, _values)
                       false
                 
  end
.,.,

# reduce 88 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 319)
  def _reduce_89(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 324)
  def _reduce_90(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 328)
  def _reduce_91(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 333)
  def _reduce_92(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 337)
  def _reduce_93(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 342)
  def _reduce_94(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 346)
  def _reduce_95(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 351)
  def _reduce_96(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 356)
  def _reduce_97(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 361)
  def _reduce_98(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 365)
  def _reduce_99(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 370)
  def _reduce_100(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 375)
  def _reduce_101(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 379)
  def _reduce_102(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 384)
  def _reduce_103(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 389)
  def _reduce_104(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 393)
  def _reduce_105(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 398)
  def _reduce_106(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 402)
  def _reduce_107(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 407)
  def _reduce_108(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 411)
  def _reduce_109(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 416)
  def _reduce_110(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 430)
  def _reduce_118(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 434)
  def _reduce_119(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 438)
  def _reduce_120(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 443)
  def _reduce_121(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 447)
  def _reduce_122(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 452)
  def _reduce_123(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 456)
  def _reduce_124(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 461)
  def _reduce_125(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 465)
  def _reduce_126(val, _values)
                       val[0] + [val[2]]
                
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
