= ddbcli

== Description

ddbcli is an interactive command-line client of Amazon DynamoDB.

== Source Code

https://bitbucket.org/winebarrel/ddbcli

== Install

  shell> gem install ddbcli
  shell> export AWS_ACCESS_KEY_ID='...'
  shell> export AWS_SECRET_ACCESS_KEY='...'
  shell> export DDB_REGION=ap-northeast-1
  shell> ddbcli -e 'show tables'
  [
    "employees"
  ]
  
  shell> ddbcli -h
  Usage: ddbcli [options]
      -k, --access-key=ACCESS_KEY
      -s, --secret-key=SECRET_KEY
      -r, --region=REGION_OR_ENDPOINT
      -e, --eval=COMMAND
      -t, --timeout=SECOND
          --import=TABLE,JSON_FILE
          --consistent-read
          --retry=NUM
          --retry-interval=SECOND
          --debug
      -h, --help
      ...
  shell> ddbcli # show prompt

== Help

  ##### Query #####
  
  SHOW TABLES
    displays a table list
  
  SHOW REGIONS
    displays a region list
  
  SHOW CREATE TABLE table_name
    displays a CREATE TABLE statement
  
  CREATE TABLES table_name (
       key_name {STRING|NUMBER|BINARY} HASH
    [, key_name {STRING|NUMBER|BINARY} RANGE]
    [, INDEX index1_name (attr1 {STRING|NUMBER|BINARY}) {ALL|KEYS_ONLY|INCLUDE (attr, ...)}
     , INDEX index2_name (attr2 {STRING|NUMBER|BINARY}) {ALL|KEYS_ONLY|INCLUDE (attr, ...)}
     , ...]
  ) READ = num, WRITE = num
    creates a table
  
  CREATE TABLES table_name LIKE another_table_name [READ = num, WRITE = num]
    creates a table like another table
  
  DROP TABLE table_name
    deletes a table
  
  ALTER TABLE table_name READ = num, WRITE = num
    updates the provisioned throughput
  
  GET {*|attrs} FROM table_name WHERE key1 = '...' AND ...
    gets items
  
  INSERT INTO table_name (attr1, attr2, ...) VALUES ('val1', 'val2', ...), ('val3', 'val4', ...), ...
    creates items
  
  UPDATE table_name {SET|ADD} attr1 = 'val1', ... WHERE key1 = '...' AND ...
  UPDATE ALL table_name {SET|ADD} attr1 = 'val1', ... [WHERE attr1 = '...' AND ...] [LIMIT limit]
    updates items
  
  DELETE FROM table_name WHERE key1 = '...' AND ..
  DELETE ALL FROM table_name WHERE [WHERE attr1 = '...' AND ...] [ORDER {ASC|DESC}] [LIMIT limit]
    deletes items
  
  SELECT {*|attrs|COUNT(*)} FROM table_name [USE INDEX (index_name)] [WHERE key1 = '...' AND ...] [ORDER {ASC|DESC}] [LIMIT limit]
  SELECT ALL {*|attrs|COUNT(*)}  FROM table_name [WHERE attr1 = '...' AND ...] [LIMIT limit]
    queries using the Query/Scan action
    see http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html
  
  DESC[RIBE] table_name
    displays information about the table
  
  USE region_or_endpoint
    changes an endpoint
  
  NEXT
    displays a continuation of a result
    (NEXT statement is published after SELECT statement)
  
  
  ##### Type #####
  
  String
    'London Bridge is...',  "is broken down..." ...
  
  Number
    10, 100, 0.3 ...
  
  Binary
    x'123456789abcd...', x"123456789abcd..." ...
  
  Identifier
    `ABCD...` or Non-keywords
  
  
  ##### Operator #####
  
  Query (SELECT)
    = | <= | < | >= | > | BEGINS_WITH | BETWEEN
    see http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html#DDB-Query-request-KeyConditions
  
  Scan (SELECT ALL)
    = | <> | != | <= | < | >= | > | NOT NULL | NULL | CONTAINS | NOT CONTAINS | BEGINS_WITH | IN | BETWEEN
    see http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Scan.html#DDB-Scan-request-ScanFilter
  
  
  ##### Pass to Ruby/Shell #####
  
  Ryby
    query | ruby_script
  
    ex) SELECT ALL * FROM employees WHERE gender = 'M' | birth_date.map {|i| Time.parse(i) };
        [
          "1957-09-16 00:00:00 +0900",
          "1954-12-16 00:00:00 +0900",
          "1964-05-23 00:00:00 +0900",
          ...
  
  Shell
    query ! shell_command
  
    ex) SELECT ALL * FROM employees LIMIT 10 ! sort;
        {"birth_date"=>"1957-09-16", "emp_no"=>452020,...
        {"birth_date"=>"1963-07-14", "emp_no"=>16998, ...
        {"birth_date"=>"1964-04-30", "emp_no"=>225407,...
        ...
  
  
  ##### Command #####
  
  .help                           displays this message
  .quit | .exit                   exits sdbcli
  .consistent      (true|false)?  displays ConsistentRead parameter or changes it
  .iteratable      (true|false)?  displays iteratable option or changes it
                                  all results are displayed if true
  .debug           (true|false)?  displays a debug status or changes it
  .retry           NUM?           displays number of times of a retry or changes it
  .retry_interval  SECOND?        displays a retry interval second or changes it
  .timeout         SECOND?        displays a timeout second or changes it
  .version                        displays a version
  

